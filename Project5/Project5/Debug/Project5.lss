
Project5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001536  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000006e  00800060  00001536  000015aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00001618  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001674  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  000016b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000013c8  00000000  00000000  00001780  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008a5  00000000  00000000  00002b48  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000097b  00000000  00000000  000033ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000023c  00000000  00000000  00003d68  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000433  00000000  00000000  00003fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000abe  00000000  00000000  000043d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000168  00000000  00000000  00004e95  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
       8:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
       c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      10:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      14:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      18:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      1c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      20:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      24:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      28:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      2c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      30:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      34:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      38:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      3c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      40:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      44:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      48:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      4c:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>
      50:	0c 94 bc 00 	jmp	0x178	; 0x178 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <do_rand+0x32>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <play_game+0xb4>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <tick+0x38>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <__bad_interrupt>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <output+0x1a>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e6 e3       	ldi	r30, 0x36	; 54
     162:	f5 e1       	ldi	r31, 0x15	; 21
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	ae 3c       	cpi	r26, 0xCE	; 206
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>
     170:	0e 94 c3 03 	call	0x786	; 0x786 <main>
     174:	0c 94 99 0a 	jmp	0x1532	; 0x1532 <_exit>

00000178 <__bad_interrupt>:
     178:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000017c <wait_avr>:
  WDTCR = 15;
}

void
wait_avr(unsigned short msec)
{
     17c:	9c 01       	movw	r18, r24
  TCCR0 = 1;
     17e:	81 e0       	ldi	r24, 0x01	; 1
     180:	83 bf       	out	0x33, r24	; 51
  while (msec--) {
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 1) * 0.000001);
     182:	88 ef       	ldi	r24, 0xF8	; 248

void
wait_avr(unsigned short msec)
{
  TCCR0 = 1;
  while (msec--) {
     184:	08 c0       	rjmp	.+16     	; 0x196 <wait_avr+0x1a>
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 1) * 0.000001);
     186:	82 bf       	out	0x32, r24	; 50
    SET_BIT(TIFR, TOV0);
     188:	98 b7       	in	r25, 0x38	; 56
     18a:	91 60       	ori	r25, 0x01	; 1
     18c:	98 bf       	out	0x38, r25	; 56
    WDR();
     18e:	a8 95       	wdr
    while (!GET_BIT(TIFR, TOV0));
     190:	08 b6       	in	r0, 0x38	; 56
     192:	00 fe       	sbrs	r0, 0
     194:	fd cf       	rjmp	.-6      	; 0x190 <wait_avr+0x14>

void
wait_avr(unsigned short msec)
{
  TCCR0 = 1;
  while (msec--) {
     196:	21 50       	subi	r18, 0x01	; 1
     198:	31 09       	sbc	r19, r1
     19a:	a8 f7       	brcc	.-22     	; 0x186 <wait_avr+0xa>
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 1) * 0.000001);
    SET_BIT(TIFR, TOV0);
    WDR();
    while (!GET_BIT(TIFR, TOV0));
  }
  TCCR0 = 0;
     19c:	13 be       	out	0x33, r1	; 51
     19e:	08 95       	ret

000001a0 <output>:
{
  char c;
  while ((c = pgm_read_byte(s++)) != 0) {
    write(c, 1);
  }
}
     1a0:	66 23       	and	r22, r22
     1a2:	11 f0       	breq	.+4      	; 0x1a8 <output+0x8>
     1a4:	c0 9a       	sbi	0x18, 0	; 24
     1a6:	01 c0       	rjmp	.+2      	; 0x1aa <output+0xa>
     1a8:	c0 98       	cbi	0x18, 0	; 24
     1aa:	c1 98       	cbi	0x18, 1	; 24
     1ac:	82 bb       	out	0x12, r24	; 18
     1ae:	8f ef       	ldi	r24, 0xFF	; 255
     1b0:	81 bb       	out	0x11, r24	; 17
     1b2:	c2 9a       	sbi	0x18, 2	; 24
     1b4:	00 00       	nop
     1b6:	00 00       	nop
     1b8:	00 00       	nop
     1ba:	c2 98       	cbi	0x18, 2	; 24
     1bc:	08 95       	ret

000001be <write>:
     1be:	c0 98       	cbi	0x18, 0	; 24
     1c0:	c1 9a       	sbi	0x18, 1	; 24
     1c2:	11 ba       	out	0x11, r1	; 17
     1c4:	90 b3       	in	r25, 0x10	; 16
     1c6:	c2 9a       	sbi	0x18, 2	; 24
     1c8:	00 00       	nop
     1ca:	00 00       	nop
     1cc:	00 00       	nop
     1ce:	11 ba       	out	0x11, r1	; 17
     1d0:	90 b3       	in	r25, 0x10	; 16
     1d2:	c2 98       	cbi	0x18, 2	; 24
     1d4:	99 23       	and	r25, r25
     1d6:	9c f3       	brlt	.-26     	; 0x1be <write>
     1d8:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <output>
     1dc:	08 95       	ret

000001de <ini_lcd>:
     1de:	b8 9a       	sbi	0x17, 0	; 23
     1e0:	b9 9a       	sbi	0x17, 1	; 23
     1e2:	ba 9a       	sbi	0x17, 2	; 23
     1e4:	80 e1       	ldi	r24, 0x10	; 16
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	0e 94 be 00 	call	0x17c	; 0x17c <wait_avr>
     1ec:	60 e0       	ldi	r22, 0x00	; 0
     1ee:	80 e3       	ldi	r24, 0x30	; 48
     1f0:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <output>
     1f4:	85 e0       	ldi	r24, 0x05	; 5
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	0e 94 be 00 	call	0x17c	; 0x17c <wait_avr>
     1fc:	60 e0       	ldi	r22, 0x00	; 0
     1fe:	80 e3       	ldi	r24, 0x30	; 48
     200:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <output>
     204:	81 e0       	ldi	r24, 0x01	; 1
     206:	90 e0       	ldi	r25, 0x00	; 0
     208:	0e 94 be 00 	call	0x17c	; 0x17c <wait_avr>
     20c:	60 e0       	ldi	r22, 0x00	; 0
     20e:	8c e3       	ldi	r24, 0x3C	; 60
     210:	0e 94 df 00 	call	0x1be	; 0x1be <write>
     214:	60 e0       	ldi	r22, 0x00	; 0
     216:	8c e0       	ldi	r24, 0x0C	; 12
     218:	0e 94 df 00 	call	0x1be	; 0x1be <write>
     21c:	60 e0       	ldi	r22, 0x00	; 0
     21e:	86 e0       	ldi	r24, 0x06	; 6
     220:	0e 94 df 00 	call	0x1be	; 0x1be <write>
     224:	60 e0       	ldi	r22, 0x00	; 0
     226:	81 e0       	ldi	r24, 0x01	; 1
     228:	0e 94 df 00 	call	0x1be	; 0x1be <write>
     22c:	08 95       	ret

0000022e <pos_lcd>:
     22e:	cf 93       	push	r28
     230:	c6 2f       	mov	r28, r22
     232:	98 e2       	ldi	r25, 0x28	; 40
     234:	89 9f       	mul	r24, r25
     236:	c0 0d       	add	r28, r0
     238:	11 24       	eor	r1, r1
     23a:	60 e0       	ldi	r22, 0x00	; 0
     23c:	82 e0       	ldi	r24, 0x02	; 2
     23e:	0e 94 df 00 	call	0x1be	; 0x1be <write>
     242:	cc 23       	and	r28, r28
     244:	31 f0       	breq	.+12     	; 0x252 <pos_lcd+0x24>
     246:	60 e0       	ldi	r22, 0x00	; 0
     248:	84 e1       	ldi	r24, 0x14	; 20
     24a:	0e 94 df 00 	call	0x1be	; 0x1be <write>
     24e:	c1 50       	subi	r28, 0x01	; 1
     250:	d1 f7       	brne	.-12     	; 0x246 <pos_lcd+0x18>
     252:	cf 91       	pop	r28
     254:	08 95       	ret

00000256 <put_lcd>:
     256:	61 e0       	ldi	r22, 0x01	; 1
     258:	0e 94 df 00 	call	0x1be	; 0x1be <write>
     25c:	08 95       	ret

0000025e <puts_lcd2>:

void
puts_lcd2(const char *s)
{
     25e:	cf 93       	push	r28
     260:	df 93       	push	r29
  char c;
  while ((c = *(s++)) != 0) {
     262:	ec 01       	movw	r28, r24
     264:	21 96       	adiw	r28, 0x01	; 1
     266:	fc 01       	movw	r30, r24
     268:	80 81       	ld	r24, Z
     26a:	88 23       	and	r24, r24
     26c:	31 f0       	breq	.+12     	; 0x27a <puts_lcd2+0x1c>
    write(c, 1);
     26e:	61 e0       	ldi	r22, 0x01	; 1
     270:	0e 94 df 00 	call	0x1be	; 0x1be <write>

void
puts_lcd2(const char *s)
{
  char c;
  while ((c = *(s++)) != 0) {
     274:	89 91       	ld	r24, Y+
     276:	81 11       	cpse	r24, r1
     278:	fa cf       	rjmp	.-12     	; 0x26e <puts_lcd2+0x10>
    write(c, 1);
  }
}
     27a:	df 91       	pop	r29
     27c:	cf 91       	pop	r28
     27e:	08 95       	ret

00000280 <is_pressed>:
	
	// 0 reads input, 1 sends output
	// all row inputs from keypad
	// all columns output into rows
	// 0000 1111
	DDRC = 0x0F;
     280:	2f e0       	ldi	r18, 0x0F	; 15
     282:	24 bb       	out	0x14, r18	; 20
	
	// initially all rows high impedance
	// initially all columns output 1
	PORTC = 0x0F;
     284:	25 bb       	out	0x15, r18	; 21
	
	// column constantly outputting 0 to signify press
	CLR_BIT(PORTC, column);
     286:	55 b3       	in	r21, 0x15	; 21
     288:	21 e0       	ldi	r18, 0x01	; 1
     28a:	30 e0       	ldi	r19, 0x00	; 0
     28c:	f9 01       	movw	r30, r18
     28e:	02 c0       	rjmp	.+4      	; 0x294 <is_pressed+0x14>
     290:	ee 0f       	add	r30, r30
     292:	ff 1f       	adc	r31, r31
     294:	6a 95       	dec	r22
     296:	e2 f7       	brpl	.-8      	; 0x290 <is_pressed+0x10>
     298:	4e 2f       	mov	r20, r30
     29a:	40 95       	com	r20
     29c:	45 23       	and	r20, r21
     29e:	45 bb       	out	0x15, r20	; 21
	
	// row is reading a weak 1 input
	SET_BIT(PORTC, row+4);
     2a0:	45 b3       	in	r20, 0x15	; 21
     2a2:	04 96       	adiw	r24, 0x04	; 4
     2a4:	08 2e       	mov	r0, r24
     2a6:	02 c0       	rjmp	.+4      	; 0x2ac <is_pressed+0x2c>
     2a8:	22 0f       	add	r18, r18
     2aa:	33 1f       	adc	r19, r19
     2ac:	0a 94       	dec	r0
     2ae:	e2 f7       	brpl	.-8      	; 0x2a8 <is_pressed+0x28>
     2b0:	24 2b       	or	r18, r20
     2b2:	25 bb       	out	0x15, r18	; 21
	
	// check if the bit was changed from weak 1 to strong 0
	if (!GET_BIT(PINC, row+4)){
     2b4:	23 b3       	in	r18, 0x13	; 19
     2b6:	30 e0       	ldi	r19, 0x00	; 0
     2b8:	02 c0       	rjmp	.+4      	; 0x2be <is_pressed+0x3e>
     2ba:	35 95       	asr	r19
     2bc:	27 95       	ror	r18
     2be:	8a 95       	dec	r24
     2c0:	e2 f7       	brpl	.-8      	; 0x2ba <is_pressed+0x3a>
     2c2:	81 e0       	ldi	r24, 0x01	; 1
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	20 ff       	sbrs	r18, 0
     2c8:	02 c0       	rjmp	.+4      	; 0x2ce <is_pressed+0x4e>
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	90 e0       	ldi	r25, 0x00	; 0
		return 1;
	}

	return 0;
}
     2ce:	08 95       	ret

000002d0 <get_key>:


int get_key(void){
     2d0:	0f 93       	push	r16
     2d2:	1f 93       	push	r17
     2d4:	cf 93       	push	r28
     2d6:	df 93       	push	r29
	for (int r = 0; r < 4; r++){
     2d8:	00 e0       	ldi	r16, 0x00	; 0
     2da:	10 e0       	ldi	r17, 0x00	; 0
     2dc:	18 c0       	rjmp	.+48     	; 0x30e <get_key+0x3e>
		for (int c = 0; c < 4; c++){
			if (is_pressed(r,c)){
     2de:	be 01       	movw	r22, r28
     2e0:	c8 01       	movw	r24, r16
     2e2:	0e 94 40 01 	call	0x280	; 0x280 <is_pressed>
     2e6:	00 97       	sbiw	r24, 0x00	; 0
     2e8:	49 f0       	breq	.+18     	; 0x2fc <get_key+0x2c>
				return c*4 + r +1;
     2ea:	cc 0f       	add	r28, r28
     2ec:	dd 1f       	adc	r29, r29
     2ee:	cc 0f       	add	r28, r28
     2f0:	dd 1f       	adc	r29, r29
     2f2:	c0 0f       	add	r28, r16
     2f4:	d1 1f       	adc	r29, r17
     2f6:	ce 01       	movw	r24, r28
     2f8:	01 96       	adiw	r24, 0x01	; 1
     2fa:	0c c0       	rjmp	.+24     	; 0x314 <get_key+0x44>
}


int get_key(void){
	for (int r = 0; r < 4; r++){
		for (int c = 0; c < 4; c++){
     2fc:	21 96       	adiw	r28, 0x01	; 1
     2fe:	c4 30       	cpi	r28, 0x04	; 4
     300:	d1 05       	cpc	r29, r1
     302:	69 f7       	brne	.-38     	; 0x2de <get_key+0xe>
	return 0;
}


int get_key(void){
	for (int r = 0; r < 4; r++){
     304:	0f 5f       	subi	r16, 0xFF	; 255
     306:	1f 4f       	sbci	r17, 0xFF	; 255
     308:	04 30       	cpi	r16, 0x04	; 4
     30a:	11 05       	cpc	r17, r1
     30c:	19 f0       	breq	.+6      	; 0x314 <get_key+0x44>

	return 0;
}


int get_key(void){
     30e:	c0 e0       	ldi	r28, 0x00	; 0
     310:	d0 e0       	ldi	r29, 0x00	; 0
     312:	e5 cf       	rjmp	.-54     	; 0x2de <get_key+0xe>
				return c*4 + r +1;
			}
		}
	}
	return 0;
}
     314:	df 91       	pop	r29
     316:	cf 91       	pop	r28
     318:	1f 91       	pop	r17
     31a:	0f 91       	pop	r16
     31c:	08 95       	ret

0000031e <reset>:




void reset(char *top_row, char *bottom_row){
     31e:	0f 93       	push	r16
     320:	1f 93       	push	r17
     322:	cf 93       	push	r28
     324:	df 93       	push	r29
     326:	8c 01       	movw	r16, r24
     328:	eb 01       	movw	r28, r22
	
	sprintf(top_row, "    2:^ Press A");
     32a:	80 e1       	ldi	r24, 0x10	; 16
     32c:	e4 e6       	ldi	r30, 0x64	; 100
     32e:	f0 e0       	ldi	r31, 0x00	; 0
     330:	d8 01       	movw	r26, r16
     332:	01 90       	ld	r0, Z+
     334:	0d 92       	st	X+, r0
     336:	8a 95       	dec	r24
     338:	e1 f7       	brne	.-8      	; 0x332 <reset+0x14>
	
	sprintf(bottom_row, "4:< 8:v 6:>");
     33a:	8c e0       	ldi	r24, 0x0C	; 12
     33c:	e4 e7       	ldi	r30, 0x74	; 116
     33e:	f0 e0       	ldi	r31, 0x00	; 0
     340:	db 01       	movw	r26, r22
     342:	01 90       	ld	r0, Z+
     344:	0d 92       	st	X+, r0
     346:	8a 95       	dec	r24
     348:	e1 f7       	brne	.-8      	; 0x342 <reset+0x24>
	
	// press A to start
	
	pos_lcd(0,0);
     34a:	60 e0       	ldi	r22, 0x00	; 0
     34c:	80 e0       	ldi	r24, 0x00	; 0
     34e:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
	puts_lcd2(top_row);
     352:	c8 01       	movw	r24, r16
     354:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
	pos_lcd(1,0);
     358:	60 e0       	ldi	r22, 0x00	; 0
     35a:	81 e0       	ldi	r24, 0x01	; 1
     35c:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
	puts_lcd2(bottom_row);
     360:	ce 01       	movw	r24, r28
     362:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
	
}
     366:	df 91       	pop	r29
     368:	cf 91       	pop	r28
     36a:	1f 91       	pop	r17
     36c:	0f 91       	pop	r16
     36e:	08 95       	ret

00000370 <old_wait_avr>:

void old_wait_avr(unsigned short msec)
{
     370:	9c 01       	movw	r18, r24
	TCCR0 = 3;
     372:	83 e0       	ldi	r24, 0x03	; 3
     374:	83 bf       	out	0x33, r24	; 51
	while (msec--) {
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
     376:	83 e8       	ldi	r24, 0x83	; 131
}

void old_wait_avr(unsigned short msec)
{
	TCCR0 = 3;
	while (msec--) {
     378:	08 c0       	rjmp	.+16     	; 0x38a <old_wait_avr+0x1a>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
     37a:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
     37c:	98 b7       	in	r25, 0x38	; 56
     37e:	91 60       	ori	r25, 0x01	; 1
     380:	98 bf       	out	0x38, r25	; 56
		WDR();
     382:	a8 95       	wdr
		while (!GET_BIT(TIFR, TOV0));
     384:	08 b6       	in	r0, 0x38	; 56
     386:	00 fe       	sbrs	r0, 0
     388:	fd cf       	rjmp	.-6      	; 0x384 <old_wait_avr+0x14>
}

void old_wait_avr(unsigned short msec)
{
	TCCR0 = 3;
	while (msec--) {
     38a:	21 50       	subi	r18, 0x01	; 1
     38c:	31 09       	sbc	r19, r1
     38e:	a8 f7       	brcc	.-22     	; 0x37a <old_wait_avr+0xa>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
		SET_BIT(TIFR, TOV0);
		WDR();
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
     390:	13 be       	out	0x33, r1	; 51
     392:	08 95       	ret

00000394 <tick>:
}


int tick(char arrow, int miss) {
     394:	9f 92       	push	r9
     396:	af 92       	push	r10
     398:	bf 92       	push	r11
     39a:	cf 92       	push	r12
     39c:	df 92       	push	r13
     39e:	ef 92       	push	r14
     3a0:	ff 92       	push	r15
     3a2:	0f 93       	push	r16
     3a4:	1f 93       	push	r17
     3a6:	cf 93       	push	r28
     3a8:	df 93       	push	r29
     3aa:	f8 2e       	mov	r15, r24
     3ac:	6b 01       	movw	r12, r22
	int hit = 0;
	pos_lcd(1, 0);
     3ae:	60 e0       	ldi	r22, 0x00	; 0
     3b0:	81 e0       	ldi	r24, 0x01	; 1
     3b2:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
	puts_lcd2("          ");
     3b6:	8a ea       	ldi	r24, 0xAA	; 170
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
	// 386
	for (int i = 0; i < 200; i++){
     3be:	c0 e0       	ldi	r28, 0x00	; 0
     3c0:	d0 e0       	ldi	r29, 0x00	; 0
	TCCR0 = 0;
}


int tick(char arrow, int miss) {
	int hit = 0;
     3c2:	00 e0       	ldi	r16, 0x00	; 0
     3c4:	10 e0       	ldi	r17, 0x00	; 0
						hit = 1;
						pos_lcd(1, 2);
						puts_lcd2("HIT!");
					}
					else {
						hit = 2;
     3c6:	68 94       	set
     3c8:	99 24       	eor	r9, r9
     3ca:	91 f8       	bld	r9, 1
     3cc:	a1 2c       	mov	r10, r1
					break;
				case 5:
					pos_lcd(1,0);
					put_lcd('<');
					if(arrow=='<') {
						hit = 1;
     3ce:	bb 24       	eor	r11, r11
     3d0:	b3 94       	inc	r11
     3d2:	e1 2c       	mov	r14, r1
	int hit = 0;
	pos_lcd(1, 0);
	puts_lcd2("          ");
	// 386
	for (int i = 0; i < 200; i++){
		if (arrow == ' ' && (miss == 2 ||  miss == 0) && i < 75) {
     3d4:	80 e2       	ldi	r24, 0x20	; 32
     3d6:	f8 12       	cpse	r15, r24
     3d8:	ef c0       	rjmp	.+478    	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
     3da:	82 e0       	ldi	r24, 0x02	; 2
     3dc:	c8 16       	cp	r12, r24
     3de:	d1 04       	cpc	r13, r1
     3e0:	09 f4       	brne	.+2      	; 0x3e4 <tick+0x50>
     3e2:	d3 c0       	rjmp	.+422    	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
     3e4:	c1 14       	cp	r12, r1
     3e6:	d1 04       	cpc	r13, r1
     3e8:	09 f0       	breq	.+2      	; 0x3ec <tick+0x58>
     3ea:	d3 c0       	rjmp	.+422    	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
     3ec:	cb 34       	cpi	r28, 0x4B	; 75
     3ee:	d1 05       	cpc	r29, r1
     3f0:	0c f0       	brlt	.+2      	; 0x3f4 <tick+0x60>
     3f2:	de c0       	rjmp	.+444    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
			pos_lcd(1, 0);
     3f4:	60 e0       	ldi	r22, 0x00	; 0
     3f6:	81 e0       	ldi	r24, 0x01	; 1
     3f8:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
			puts_lcd2("  MISS!  ");	
     3fc:	80 e8       	ldi	r24, 0x80	; 128
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
     404:	24 c0       	rjmp	.+72     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
		}
		else if (miss == 1 && arrow==' ' && i < 75) {
     406:	cb 34       	cpi	r28, 0x4B	; 75
     408:	d1 05       	cpc	r29, r1
     40a:	0c f0       	brlt	.+2      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     40c:	c7 c0       	rjmp	.+398    	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
			pos_lcd(1, 0);
     40e:	60 e0       	ldi	r22, 0x00	; 0
     410:	81 e0       	ldi	r24, 0x01	; 1
     412:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
			puts_lcd2("  HIT!   ");
     416:	8a e8       	ldi	r24, 0x8A	; 138
     418:	90 e0       	ldi	r25, 0x00	; 0
     41a:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
     41e:	17 c0       	rjmp	.+46     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
		}
		else if (i > 25 && arrow==' ' && miss == 1) {
			pos_lcd(1, 0);
     420:	60 e0       	ldi	r22, 0x00	; 0
     422:	81 e0       	ldi	r24, 0x01	; 1
     424:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
			puts_lcd2("       ");	
     428:	8d ea       	ldi	r24, 0xAD	; 173
     42a:	90 e0       	ldi	r25, 0x00	; 0
     42c:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
     430:	0e c0       	rjmp	.+28     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
		}
		else if(i > 75 && arrow==' ') {
     432:	cc 34       	cpi	r28, 0x4C	; 76
     434:	d1 05       	cpc	r29, r1
     436:	5c f0       	brlt	.+22     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     438:	80 e2       	ldi	r24, 0x20	; 32
     43a:	f8 12       	cpse	r15, r24
     43c:	08 c0       	rjmp	.+16     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
			pos_lcd(1, 0);
     43e:	60 e0       	ldi	r22, 0x00	; 0
     440:	81 e0       	ldi	r24, 0x01	; 1
     442:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
			puts_lcd2("       ");
     446:	8d ea       	ldi	r24, 0xAD	; 173
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
		}
		
		if (hit == 0) {
     44e:	01 15       	cp	r16, r1
     450:	11 05       	cpc	r17, r1
     452:	09 f0       	breq	.+2      	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     454:	90 c0       	rjmp	.+288    	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
			int number = get_key();
     456:	0e 94 68 01 	call	0x2d0	; 0x2d0 <get_key>
			switch (number){
     45a:	85 30       	cpi	r24, 0x05	; 5
     45c:	91 05       	cpc	r25, r1
     45e:	61 f1       	breq	.+88     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
     460:	1c f4       	brge	.+6      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     462:	02 97       	sbiw	r24, 0x02	; 2
     464:	49 f0       	breq	.+18     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
     466:	87 c0       	rjmp	.+270    	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
     468:	87 30       	cpi	r24, 0x07	; 7
     46a:	91 05       	cpc	r25, r1
     46c:	09 f4       	brne	.+2      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
     46e:	44 c0       	rjmp	.+136    	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
     470:	0a 97       	sbiw	r24, 0x0a	; 10
     472:	09 f4       	brne	.+2      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
     474:	61 c0       	rjmp	.+194    	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
     476:	7f c0       	rjmp	.+254    	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
				// Initialize Button
				case 2:
					pos_lcd(1,0);
     478:	60 e0       	ldi	r22, 0x00	; 0
     47a:	81 e0       	ldi	r24, 0x01	; 1
     47c:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
					put_lcd('^');
     480:	8e e5       	ldi	r24, 0x5E	; 94
     482:	0e 94 2b 01 	call	0x256	; 0x256 <put_lcd>
					if (arrow == '^') {
     486:	8e e5       	ldi	r24, 0x5E	; 94
     488:	f8 12       	cpse	r15, r24
     48a:	0b c0       	rjmp	.+22     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
						hit = 1;
						pos_lcd(1, 2);
     48c:	62 e0       	ldi	r22, 0x02	; 2
     48e:	81 e0       	ldi	r24, 0x01	; 1
     490:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
						puts_lcd2("HIT!");
     494:	84 e9       	ldi	r24, 0x94	; 148
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
				// Initialize Button
				case 2:
					pos_lcd(1,0);
					put_lcd('^');
					if (arrow == '^') {
						hit = 1;
     49c:	0b 2d       	mov	r16, r11
     49e:	1e 2d       	mov	r17, r14
     4a0:	6a c0       	rjmp	.+212    	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
						pos_lcd(1, 2);
						puts_lcd2("HIT!");
					}
					else {
						hit = 2;
						pos_lcd(1,2);
     4a2:	62 e0       	ldi	r22, 0x02	; 2
     4a4:	81 e0       	ldi	r24, 0x01	; 1
     4a6:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
						puts_lcd2("MISS!");
     4aa:	89 e9       	ldi	r24, 0x99	; 153
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
						hit = 1;
						pos_lcd(1, 2);
						puts_lcd2("HIT!");
					}
					else {
						hit = 2;
     4b2:	09 2d       	mov	r16, r9
     4b4:	1a 2d       	mov	r17, r10
     4b6:	5f c0       	rjmp	.+190    	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
						pos_lcd(1,2);
						puts_lcd2("MISS!");
					}
					break;
				case 5:
					pos_lcd(1,0);
     4b8:	60 e0       	ldi	r22, 0x00	; 0
     4ba:	81 e0       	ldi	r24, 0x01	; 1
     4bc:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
					put_lcd('<');
     4c0:	8c e3       	ldi	r24, 0x3C	; 60
     4c2:	0e 94 2b 01 	call	0x256	; 0x256 <put_lcd>
					if(arrow=='<') {
     4c6:	8c e3       	ldi	r24, 0x3C	; 60
     4c8:	f8 12       	cpse	r15, r24
     4ca:	0b c0       	rjmp	.+22     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
						hit = 1;
						pos_lcd(1, 2);
     4cc:	62 e0       	ldi	r22, 0x02	; 2
     4ce:	81 e0       	ldi	r24, 0x01	; 1
     4d0:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
						puts_lcd2("HIT!");
     4d4:	84 e9       	ldi	r24, 0x94	; 148
     4d6:	90 e0       	ldi	r25, 0x00	; 0
     4d8:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
					break;
				case 5:
					pos_lcd(1,0);
					put_lcd('<');
					if(arrow=='<') {
						hit = 1;
     4dc:	0b 2d       	mov	r16, r11
     4de:	1e 2d       	mov	r17, r14
     4e0:	4a c0       	rjmp	.+148    	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
						pos_lcd(1, 2);
						puts_lcd2("HIT!");
					}
					else {
						hit = 2;
						pos_lcd(1,2);
     4e2:	62 e0       	ldi	r22, 0x02	; 2
     4e4:	81 e0       	ldi	r24, 0x01	; 1
     4e6:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
						puts_lcd2("MISS!");
     4ea:	89 e9       	ldi	r24, 0x99	; 153
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
						hit = 1;
						pos_lcd(1, 2);
						puts_lcd2("HIT!");
					}
					else {
						hit = 2;
     4f2:	09 2d       	mov	r16, r9
     4f4:	1a 2d       	mov	r17, r10
     4f6:	3f c0       	rjmp	.+126    	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
						pos_lcd(1,2);
						puts_lcd2("MISS!");
					}
					break;
				case 7:
					pos_lcd(1,0);
     4f8:	60 e0       	ldi	r22, 0x00	; 0
     4fa:	81 e0       	ldi	r24, 0x01	; 1
     4fc:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
					put_lcd('>');
     500:	8e e3       	ldi	r24, 0x3E	; 62
     502:	0e 94 2b 01 	call	0x256	; 0x256 <put_lcd>
					if(arrow=='>') {
     506:	8e e3       	ldi	r24, 0x3E	; 62
     508:	f8 12       	cpse	r15, r24
     50a:	0b c0       	rjmp	.+22     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
						hit = 1;
						pos_lcd(1, 2);
     50c:	62 e0       	ldi	r22, 0x02	; 2
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
						puts_lcd2("HIT!");
     514:	84 e9       	ldi	r24, 0x94	; 148
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
					break;
				case 7:
					pos_lcd(1,0);
					put_lcd('>');
					if(arrow=='>') {
						hit = 1;
     51c:	0b 2d       	mov	r16, r11
     51e:	1e 2d       	mov	r17, r14
     520:	2a c0       	rjmp	.+84     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
						pos_lcd(1, 2);
						puts_lcd2("HIT!");
					}
					else {
						hit = 2;
						pos_lcd(1,2);
     522:	62 e0       	ldi	r22, 0x02	; 2
     524:	81 e0       	ldi	r24, 0x01	; 1
     526:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
						puts_lcd2("MISS!");
     52a:	89 e9       	ldi	r24, 0x99	; 153
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
						hit = 1;
						pos_lcd(1, 2);
						puts_lcd2("HIT!");
					}
					else {
						hit = 2;
     532:	09 2d       	mov	r16, r9
     534:	1a 2d       	mov	r17, r10
     536:	1f c0       	rjmp	.+62     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
						pos_lcd(1,2);
						puts_lcd2("MISS!");
					}
					break;
				case 10:
					pos_lcd(1,0);
     538:	60 e0       	ldi	r22, 0x00	; 0
     53a:	81 e0       	ldi	r24, 0x01	; 1
     53c:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
					put_lcd('v');
     540:	86 e7       	ldi	r24, 0x76	; 118
     542:	0e 94 2b 01 	call	0x256	; 0x256 <put_lcd>
					if (arrow=='v') {
     546:	86 e7       	ldi	r24, 0x76	; 118
     548:	f8 12       	cpse	r15, r24
     54a:	0b c0       	rjmp	.+22     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
						hit = 1;
						pos_lcd(1, 2);
     54c:	62 e0       	ldi	r22, 0x02	; 2
     54e:	81 e0       	ldi	r24, 0x01	; 1
     550:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
						puts_lcd2("HIT!");
     554:	84 e9       	ldi	r24, 0x94	; 148
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
					break;
				case 10:
					pos_lcd(1,0);
					put_lcd('v');
					if (arrow=='v') {
						hit = 1;
     55c:	0b 2d       	mov	r16, r11
     55e:	1e 2d       	mov	r17, r14
     560:	0a c0       	rjmp	.+20     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
						pos_lcd(1, 2);
						puts_lcd2("HIT!");
					}
					else {
						hit = 2;
						pos_lcd(1,2);
     562:	62 e0       	ldi	r22, 0x02	; 2
     564:	81 e0       	ldi	r24, 0x01	; 1
     566:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
						puts_lcd2("MISS!");
     56a:	89 e9       	ldi	r24, 0x99	; 153
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
						hit = 1;
						pos_lcd(1, 2);
						puts_lcd2("HIT!");
					}
					else {
						hit = 2;
     572:	09 2d       	mov	r16, r9
     574:	1a 2d       	mov	r17, r10
			//}
		}
		


		old_wait_avr(1);		
     576:	8b 2d       	mov	r24, r11
     578:	9e 2d       	mov	r25, r14
     57a:	0e 94 b8 01 	call	0x370	; 0x370 <old_wait_avr>
int tick(char arrow, int miss) {
	int hit = 0;
	pos_lcd(1, 0);
	puts_lcd2("          ");
	// 386
	for (int i = 0; i < 200; i++){
     57e:	21 96       	adiw	r28, 0x01	; 1
     580:	c8 3c       	cpi	r28, 0xC8	; 200
     582:	d1 05       	cpc	r29, r1
     584:	09 f0       	breq	.+2      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
     586:	26 cf       	rjmp	.-436    	; 0x3d4 <tick+0x40>
     588:	21 c0       	rjmp	.+66     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
		if (arrow == ' ' && (miss == 2 ||  miss == 0) && i < 75) {
     58a:	cb 34       	cpi	r28, 0x4B	; 75
     58c:	d1 05       	cpc	r29, r1
     58e:	84 f4       	brge	.+32     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
     590:	31 cf       	rjmp	.-414    	; 0x3f4 <tick+0x60>
			pos_lcd(1, 0);
			puts_lcd2("  MISS!  ");	
		}
		else if (miss == 1 && arrow==' ' && i < 75) {
     592:	81 e0       	ldi	r24, 0x01	; 1
     594:	c8 16       	cp	r12, r24
     596:	d1 04       	cpc	r13, r1
     598:	59 f4       	brne	.+22     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
     59a:	35 cf       	rjmp	.-406    	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
			pos_lcd(1, 0);
			puts_lcd2("  HIT!   ");
		}
		else if (i > 25 && arrow==' ' && miss == 1) {
     59c:	ca 31       	cpi	r28, 0x1A	; 26
     59e:	d1 05       	cpc	r29, r1
     5a0:	0c f0       	brlt	.+2      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
     5a2:	3e cf       	rjmp	.-388    	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     5a4:	0e c0       	rjmp	.+28     	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
			pos_lcd(1, 0);
			puts_lcd2("       ");	
		}
		else if(i > 75 && arrow==' ') {
     5a6:	cc 34       	cpi	r28, 0x4C	; 76
     5a8:	d1 05       	cpc	r29, r1
     5aa:	0c f0       	brlt	.+2      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
     5ac:	48 cf       	rjmp	.-368    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     5ae:	4f cf       	rjmp	.-354    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
		}
		else if (miss == 1 && arrow==' ' && i < 75) {
			pos_lcd(1, 0);
			puts_lcd2("  HIT!   ");
		}
		else if (i > 25 && arrow==' ' && miss == 1) {
     5b0:	ca 31       	cpi	r28, 0x1A	; 26
     5b2:	d1 05       	cpc	r29, r1
     5b4:	c4 f7       	brge	.-16     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
     5b6:	3d cf       	rjmp	.-390    	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
     5b8:	ca 31       	cpi	r28, 0x1A	; 26
     5ba:	d1 05       	cpc	r29, r1
     5bc:	0c f0       	brlt	.+2      	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
     5be:	47 cf       	rjmp	.-370    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     5c0:	38 cf       	rjmp	.-400    	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
			pos_lcd(1, 0);
			puts_lcd2("       ");	
		}
		else if(i > 75 && arrow==' ') {
     5c2:	cc 34       	cpi	r28, 0x4C	; 76
     5c4:	d1 05       	cpc	r29, r1
     5c6:	0c f4       	brge	.+2      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
     5c8:	42 cf       	rjmp	.-380    	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     5ca:	39 cf       	rjmp	.-398    	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
		old_wait_avr(1);		
  
	}

	return hit;
}
     5cc:	c8 01       	movw	r24, r16
     5ce:	df 91       	pop	r29
     5d0:	cf 91       	pop	r28
     5d2:	1f 91       	pop	r17
     5d4:	0f 91       	pop	r16
     5d6:	ff 90       	pop	r15
     5d8:	ef 90       	pop	r14
     5da:	df 90       	pop	r13
     5dc:	cf 90       	pop	r12
     5de:	bf 90       	pop	r11
     5e0:	af 90       	pop	r10
     5e2:	9f 90       	pop	r9
     5e4:	08 95       	ret

000005e6 <play_game>:

int play_game() {
     5e6:	2f 92       	push	r2
     5e8:	3f 92       	push	r3
     5ea:	4f 92       	push	r4
     5ec:	5f 92       	push	r5
     5ee:	6f 92       	push	r6
     5f0:	7f 92       	push	r7
     5f2:	8f 92       	push	r8
     5f4:	9f 92       	push	r9
     5f6:	af 92       	push	r10
     5f8:	bf 92       	push	r11
     5fa:	cf 92       	push	r12
     5fc:	df 92       	push	r13
     5fe:	ef 92       	push	r14
     600:	ff 92       	push	r15
     602:	0f 93       	push	r16
     604:	1f 93       	push	r17
     606:	cf 93       	push	r28
     608:	df 93       	push	r29
     60a:	cd b7       	in	r28, 0x3d	; 61
     60c:	de b7       	in	r29, 0x3e	; 62
     60e:	66 97       	sbiw	r28, 0x16	; 22
     610:	0f b6       	in	r0, 0x3f	; 63
     612:	f8 94       	cli
     614:	de bf       	out	0x3e, r29	; 62
     616:	0f be       	out	0x3f, r0	; 63
     618:	cd bf       	out	0x3d, r28	; 61

	char arrows[5] = "<>^v";
     61a:	85 e0       	ldi	r24, 0x05	; 5
     61c:	ef e9       	ldi	r30, 0x9F	; 159
     61e:	f0 e0       	ldi	r31, 0x00	; 0
     620:	de 01       	movw	r26, r28
     622:	11 96       	adiw	r26, 0x01	; 1
     624:	01 90       	ld	r0, Z+
     626:	0d 92       	st	X+, r0
     628:	8a 95       	dec	r24
     62a:	e1 f7       	brne	.-8      	; 0x624 <play_game+0x3e>
	
	char bufff[17] = "                ";
     62c:	81 e1       	ldi	r24, 0x11	; 17
     62e:	e4 ea       	ldi	r30, 0xA4	; 164
     630:	f0 e0       	ldi	r31, 0x00	; 0
     632:	de 01       	movw	r26, r28
     634:	16 96       	adiw	r26, 0x06	; 6
     636:	01 90       	ld	r0, Z+
     638:	0d 92       	st	X+, r0
     63a:	8a 95       	dec	r24
     63c:	e1 f7       	brne	.-8      	; 0x636 <play_game+0x50>
	
	int space = 0;
	
	int score = 0;
	
	int ranum = rand() % 4;
     63e:	0e 94 0a 05 	call	0xa14	; 0xa14 <rand>
	
	int hit = 0;
	
		
	for (int j = 0; j < 92; j++) {
     642:	c1 2c       	mov	r12, r1
     644:	d1 2c       	mov	r13, r1
	
	int score = 0;
	
	int ranum = rand() % 4;
	
	int hit = 0;
     646:	81 2c       	mov	r8, r1
     648:	91 2c       	mov	r9, r1
	
	char bufff[17] = "                ";
	
	int space = 0;
	
	int score = 0;
     64a:	61 2c       	mov	r6, r1
     64c:	71 2c       	mov	r7, r1

	char arrows[5] = "<>^v";
	
	char bufff[17] = "                ";
	
	int space = 0;
     64e:	41 2c       	mov	r4, r1
     650:	51 2c       	mov	r5, r1
	
		
	for (int j = 0; j < 92; j++) {
		pos_lcd(0, 0);
		//sprintf(bufff, "%c", arrows[ranum]);
		puts_lcd2(bufff);
     652:	7e 01       	movw	r14, r28
     654:	86 e0       	ldi	r24, 0x06	; 6
     656:	e8 0e       	add	r14, r24
     658:	f1 1c       	adc	r15, r1
     65a:	8e 01       	movw	r16, r28
     65c:	0b 5e       	subi	r16, 0xEB	; 235
     65e:	1f 4f       	sbci	r17, 0xFF	; 255
	
	int hit = 0;
	
		
	for (int j = 0; j < 92; j++) {
		pos_lcd(0, 0);
     660:	60 e0       	ldi	r22, 0x00	; 0
     662:	80 e0       	ldi	r24, 0x00	; 0
     664:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
		//sprintf(bufff, "%c", arrows[ranum]);
		puts_lcd2(bufff);
     668:	c7 01       	movw	r24, r14
     66a:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
		if (j < 15) {
     66e:	8f e0       	ldi	r24, 0x0F	; 15
     670:	c8 16       	cp	r12, r24
     672:	d1 04       	cpc	r13, r1
     674:	3c f4       	brge	.+14     	; 0x684 <play_game+0x9e>
			hit = tick(bufff[0], 3);
     676:	63 e0       	ldi	r22, 0x03	; 3
     678:	70 e0       	ldi	r23, 0x00	; 0
     67a:	8e 81       	ldd	r24, Y+6	; 0x06
     67c:	0e 94 ca 01 	call	0x394	; 0x394 <tick>
     680:	4c 01       	movw	r8, r24
     682:	05 c0       	rjmp	.+10     	; 0x68e <play_game+0xa8>
		}
		else {
			hit = tick(bufff[0], hit);
     684:	b4 01       	movw	r22, r8
     686:	8e 81       	ldd	r24, Y+6	; 0x06
     688:	0e 94 ca 01 	call	0x394	; 0x394 <tick>
     68c:	4c 01       	movw	r8, r24
		}
		if(hit == 1) {
     68e:	81 e0       	ldi	r24, 0x01	; 1
     690:	88 16       	cp	r8, r24
     692:	91 04       	cpc	r9, r1
     694:	19 f4       	brne	.+6      	; 0x69c <play_game+0xb6>
			score++;
     696:	8f ef       	ldi	r24, 0xFF	; 255
     698:	68 1a       	sub	r6, r24
     69a:	78 0a       	sbc	r7, r24
		}
		
		ranum = rand() % 4;
     69c:	0e 94 0a 05 	call	0xa14	; 0xa14 <rand>
     6a0:	9c 01       	movw	r18, r24
     6a2:	3e 2c       	mov	r3, r14
     6a4:	2f 2c       	mov	r2, r15
     6a6:	58 01       	movw	r10, r16
     6a8:	f7 01       	movw	r30, r14
     6aa:	1d c0       	rjmp	.+58     	; 0x6e6 <play_game+0x100>
		for (int i = 0; i < 16; i++) {
			if (i == 15) {
				if (space == 0) {
     6ac:	45 28       	or	r4, r5
     6ae:	b1 f4       	brne	.+44     	; 0x6dc <play_game+0xf6>
					bufff[i] = arrows[ranum];
     6b0:	23 70       	andi	r18, 0x03	; 3
     6b2:	30 78       	andi	r19, 0x80	; 128
     6b4:	33 23       	and	r19, r19
     6b6:	34 f4       	brge	.+12     	; 0x6c4 <play_game+0xde>
     6b8:	21 50       	subi	r18, 0x01	; 1
     6ba:	31 09       	sbc	r19, r1
     6bc:	2c 6f       	ori	r18, 0xFC	; 252
     6be:	3f 6f       	ori	r19, 0xFF	; 255
     6c0:	2f 5f       	subi	r18, 0xFF	; 255
     6c2:	3f 4f       	sbci	r19, 0xFF	; 255
     6c4:	e1 e0       	ldi	r30, 0x01	; 1
     6c6:	f0 e0       	ldi	r31, 0x00	; 0
     6c8:	ec 0f       	add	r30, r28
     6ca:	fd 1f       	adc	r31, r29
     6cc:	e2 0f       	add	r30, r18
     6ce:	f3 1f       	adc	r31, r19
     6d0:	80 81       	ld	r24, Z
     6d2:	8d 8b       	std	Y+21, r24	; 0x15
					space = 1;
     6d4:	44 24       	eor	r4, r4
     6d6:	43 94       	inc	r4
     6d8:	51 2c       	mov	r5, r1
     6da:	2d c0       	rjmp	.+90     	; 0x736 <play_game+0x150>
				}
				else {
					bufff[i] = ' ';
     6dc:	80 e2       	ldi	r24, 0x20	; 32
     6de:	8d 8b       	std	Y+21, r24	; 0x15
					space = 0;
     6e0:	41 2c       	mov	r4, r1
     6e2:	51 2c       	mov	r5, r1
     6e4:	28 c0       	rjmp	.+80     	; 0x736 <play_game+0x150>
				}
			}
			else {
				bufff[i] = bufff[i+1];
     6e6:	91 81       	ldd	r25, Z+1	; 0x01
     6e8:	91 93       	st	Z+, r25
			score++;
		}
		
		ranum = rand() % 4;
		for (int i = 0; i < 16; i++) {
			if (i == 15) {
     6ea:	0e 17       	cp	r16, r30
     6ec:	1f 07       	cpc	r17, r31
     6ee:	d9 f7       	brne	.-10     	; 0x6e6 <play_game+0x100>
     6f0:	dd cf       	rjmp	.-70     	; 0x6ac <play_game+0xc6>
			}
		}
		
	}
	for (int x = 0; x < 16; x++){
		pos_lcd(0, 0);
     6f2:	60 e0       	ldi	r22, 0x00	; 0
     6f4:	80 e0       	ldi	r24, 0x00	; 0
     6f6:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
		//sprintf(bufff, "%c", arrows[ranum]);
		puts_lcd2(bufff);
     6fa:	ce 01       	movw	r24, r28
     6fc:	06 96       	adiw	r24, 0x06	; 6
     6fe:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
		hit = tick(bufff[0], hit);
     702:	b4 01       	movw	r22, r8
     704:	8e 81       	ldd	r24, Y+6	; 0x06
     706:	0e 94 ca 01 	call	0x394	; 0x394 <tick>
     70a:	4c 01       	movw	r8, r24
		if(hit == 1) {
     70c:	81 e0       	ldi	r24, 0x01	; 1
     70e:	88 16       	cp	r8, r24
     710:	91 04       	cpc	r9, r1
     712:	19 f4       	brne	.+6      	; 0x71a <play_game+0x134>
			score++;
     714:	8f ef       	ldi	r24, 0xFF	; 255
     716:	68 1a       	sub	r6, r24
     718:	78 0a       	sbc	r7, r24
     71a:	e3 2d       	mov	r30, r3
     71c:	f2 2d       	mov	r31, r2
     71e:	05 c0       	rjmp	.+10     	; 0x72a <play_game+0x144>
		}
		for (int y = 0; y < 16; y++) {
			if (y == 15) {
				bufff[y] = ' ';
     720:	fd 8a       	std	Y+21, r15	; 0x15
     722:	01 50       	subi	r16, 0x01	; 1
     724:	11 09       	sbc	r17, r1
				bufff[i] = bufff[i+1];
			}
		}
		
	}
	for (int x = 0; x < 16; x++){
     726:	29 f7       	brne	.-54     	; 0x6f2 <play_game+0x10c>
     728:	14 c0       	rjmp	.+40     	; 0x752 <play_game+0x16c>
			if (y == 15) {
				bufff[y] = ' ';
				space = 0;
			}
			else {
				bufff[y] = bufff[y+1];
     72a:	81 81       	ldd	r24, Z+1	; 0x01
     72c:	81 93       	st	Z+, r24
		hit = tick(bufff[0], hit);
		if(hit == 1) {
			score++;
		}
		for (int y = 0; y < 16; y++) {
			if (y == 15) {
     72e:	ae 16       	cp	r10, r30
     730:	bf 06       	cpc	r11, r31
     732:	d9 f7       	brne	.-10     	; 0x72a <play_game+0x144>
     734:	f5 cf       	rjmp	.-22     	; 0x720 <play_game+0x13a>
	int ranum = rand() % 4;
	
	int hit = 0;
	
		
	for (int j = 0; j < 92; j++) {
     736:	8f ef       	ldi	r24, 0xFF	; 255
     738:	c8 1a       	sub	r12, r24
     73a:	d8 0a       	sbc	r13, r24
     73c:	8c e5       	ldi	r24, 0x5C	; 92
     73e:	c8 16       	cp	r12, r24
     740:	d1 04       	cpc	r13, r1
     742:	09 f0       	breq	.+2      	; 0x746 <play_game+0x160>
     744:	8d cf       	rjmp	.-230    	; 0x660 <play_game+0x7a>
     746:	00 e1       	ldi	r16, 0x10	; 16
     748:	10 e0       	ldi	r17, 0x00	; 0
		if(hit == 1) {
			score++;
		}
		for (int y = 0; y < 16; y++) {
			if (y == 15) {
				bufff[y] = ' ';
     74a:	68 94       	set
     74c:	ff 24       	eor	r15, r15
     74e:	f5 f8       	bld	r15, 5
     750:	d0 cf       	rjmp	.-96     	; 0x6f2 <play_game+0x10c>
		}
	}
	
	return score;
	
}
     752:	c3 01       	movw	r24, r6
     754:	66 96       	adiw	r28, 0x16	; 22
     756:	0f b6       	in	r0, 0x3f	; 63
     758:	f8 94       	cli
     75a:	de bf       	out	0x3e, r29	; 62
     75c:	0f be       	out	0x3f, r0	; 63
     75e:	cd bf       	out	0x3d, r28	; 61
     760:	df 91       	pop	r29
     762:	cf 91       	pop	r28
     764:	1f 91       	pop	r17
     766:	0f 91       	pop	r16
     768:	ff 90       	pop	r15
     76a:	ef 90       	pop	r14
     76c:	df 90       	pop	r13
     76e:	cf 90       	pop	r12
     770:	bf 90       	pop	r11
     772:	af 90       	pop	r10
     774:	9f 90       	pop	r9
     776:	8f 90       	pop	r8
     778:	7f 90       	pop	r7
     77a:	6f 90       	pop	r6
     77c:	5f 90       	pop	r5
     77e:	4f 90       	pop	r4
     780:	3f 90       	pop	r3
     782:	2f 90       	pop	r2
     784:	08 95       	ret

00000786 <main>:

int main(void)
{
     786:	cf 93       	push	r28
     788:	df 93       	push	r29
     78a:	cd b7       	in	r28, 0x3d	; 61
     78c:	de b7       	in	r29, 0x3e	; 62
     78e:	c4 54       	subi	r28, 0x44	; 68
     790:	d1 09       	sbc	r29, r1
     792:	0f b6       	in	r0, 0x3f	; 63
     794:	f8 94       	cli
     796:	de bf       	out	0x3e, r29	; 62
     798:	0f be       	out	0x3f, r0	; 63
     79a:	cd bf       	out	0x3d, r28	; 61
	// turn off debugging
	MCUCSR = (1<<JTD);
     79c:	80 e8       	ldi	r24, 0x80	; 128
     79e:	84 bf       	out	0x34, r24	; 52
	MCUCSR = (1<<JTD);
     7a0:	84 bf       	out	0x34, r24	; 52
	
	// init lcd
	ini_lcd();
     7a2:	0e 94 ef 00 	call	0x1de	; 0x1de <ini_lcd>
	
	
	// initial display
	char top_row[17];
	char bottom_row[17];
	reset(top_row, bottom_row);
     7a6:	be 01       	movw	r22, r28
     7a8:	6e 5e       	subi	r22, 0xEE	; 238
     7aa:	7f 4f       	sbci	r23, 0xFF	; 255
     7ac:	ce 01       	movw	r24, r28
     7ae:	01 96       	adiw	r24, 0x01	; 1
     7b0:	0e 94 8f 01 	call	0x31e	; 0x31e <reset>
	
	
	// A0 output
	// 0b 0000 0001 
	DDRA |= 0x01;
     7b4:	d0 9a       	sbi	0x1a, 0	; 26
				CLR_BIT(PORTA, 0);
				pos_lcd(1,0);
				puts_lcd2("            ");
				int score = play_game();
				char score_ar[17];
				sprintf(score_ar, "SCORE: %d", score);
     7b6:	0f 2e       	mov	r0, r31
     7b8:	f5 eb       	ldi	r31, 0xB5	; 181
     7ba:	cf 2e       	mov	r12, r31
     7bc:	f0 e0       	ldi	r31, 0x00	; 0
     7be:	df 2e       	mov	r13, r31
     7c0:	f0 2d       	mov	r31, r0
     7c2:	7e 01       	movw	r14, r28
     7c4:	84 e3       	ldi	r24, 0x34	; 52
     7c6:	e8 0e       	add	r14, r24
     7c8:	f1 1c       	adc	r15, r1
				pos_lcd(1, 0);
				puts_lcd2(score_ar);
				pos_lcd(0, 0);
				char accuracy[17];
				dtostrf(score*100/40, 3, 0, accuracy);
     7ca:	0f 2e       	mov	r0, r31
     7cc:	f4 e6       	ldi	r31, 0x64	; 100
     7ce:	9f 2e       	mov	r9, r31
     7d0:	f0 2d       	mov	r31, r0
     7d2:	0f 2e       	mov	r0, r31
     7d4:	f8 e2       	ldi	r31, 0x28	; 40
     7d6:	af 2e       	mov	r10, r31
     7d8:	b1 2c       	mov	r11, r1
     7da:	f0 2d       	mov	r31, r0
	

    while (1) 
    {
		
		int number = get_key();
     7dc:	0e 94 68 01 	call	0x2d0	; 0x2d0 <get_key>

		switch (number){
     7e0:	04 97       	sbiw	r24, 0x04	; 4
     7e2:	e1 f7       	brne	.-8      	; 0x7dc <main+0x56>
			// Initialize Button
			case 4:
				// send an output
				SET_BIT(PORTA, 0);
     7e4:	d8 9a       	sbi	0x1b, 0	; 27
				// stop output
				CLR_BIT(PORTA, 0);
     7e6:	d8 98       	cbi	0x1b, 0	; 27
				pos_lcd(1,0);
     7e8:	60 e0       	ldi	r22, 0x00	; 0
     7ea:	81 e0       	ldi	r24, 0x01	; 1
     7ec:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
				puts_lcd2("            ");
     7f0:	88 ea       	ldi	r24, 0xA8	; 168
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
				int score = play_game();
     7f8:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <play_game>
     7fc:	8c 01       	movw	r16, r24
				char score_ar[17];
				sprintf(score_ar, "SCORE: %d", score);
     7fe:	1f 93       	push	r17
     800:	8f 93       	push	r24
     802:	df 92       	push	r13
     804:	cf 92       	push	r12
     806:	ff 92       	push	r15
     808:	ef 92       	push	r14
     80a:	0e 94 1a 05 	call	0xa34	; 0xa34 <sprintf>
				pos_lcd(1, 0);
     80e:	60 e0       	ldi	r22, 0x00	; 0
     810:	81 e0       	ldi	r24, 0x01	; 1
     812:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
				puts_lcd2(score_ar);
     816:	c7 01       	movw	r24, r14
     818:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
				pos_lcd(0, 0);
     81c:	60 e0       	ldi	r22, 0x00	; 0
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
				char accuracy[17];
				dtostrf(score*100/40, 3, 0, accuracy);
     824:	90 9e       	mul	r9, r16
     826:	c0 01       	movw	r24, r0
     828:	91 9e       	mul	r9, r17
     82a:	90 0d       	add	r25, r0
     82c:	11 24       	eor	r1, r1
     82e:	b5 01       	movw	r22, r10
     830:	0e 94 76 04 	call	0x8ec	; 0x8ec <__divmodhi4>
     834:	07 2e       	mov	r0, r23
     836:	00 0c       	add	r0, r0
     838:	88 0b       	sbc	r24, r24
     83a:	99 0b       	sbc	r25, r25
     83c:	0e 94 3b 04 	call	0x876	; 0x876 <__floatsisf>
     840:	8e 01       	movw	r16, r28
     842:	0d 5d       	subi	r16, 0xDD	; 221
     844:	1f 4f       	sbci	r17, 0xFF	; 255
     846:	20 e0       	ldi	r18, 0x00	; 0
     848:	43 e0       	ldi	r20, 0x03	; 3
     84a:	0e 94 9e 04 	call	0x93c	; 0x93c <dtostrf>
				//sprintf(accuracy, "ACCURACY: %d\%", score*100/46);
				puts_lcd2("Accuracy:    %");
     84e:	8f eb       	ldi	r24, 0xBF	; 191
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
				pos_lcd(0, 10);
     856:	6a e0       	ldi	r22, 0x0A	; 10
     858:	80 e0       	ldi	r24, 0x00	; 0
     85a:	0e 94 17 01 	call	0x22e	; 0x22e <pos_lcd>
				puts_lcd2(accuracy);
     85e:	c8 01       	movw	r24, r16
     860:	0e 94 2f 01 	call	0x25e	; 0x25e <puts_lcd2>
     864:	0f 90       	pop	r0
     866:	0f 90       	pop	r0
     868:	0f 90       	pop	r0
     86a:	0f 90       	pop	r0
     86c:	0f 90       	pop	r0
     86e:	0f 90       	pop	r0
     870:	b5 cf       	rjmp	.-150    	; 0x7dc <main+0x56>

00000872 <__floatunsisf>:
     872:	e8 94       	clt
     874:	09 c0       	rjmp	.+18     	; 0x888 <__floatsisf+0x12>

00000876 <__floatsisf>:
     876:	97 fb       	bst	r25, 7
     878:	3e f4       	brtc	.+14     	; 0x888 <__floatsisf+0x12>
     87a:	90 95       	com	r25
     87c:	80 95       	com	r24
     87e:	70 95       	com	r23
     880:	61 95       	neg	r22
     882:	7f 4f       	sbci	r23, 0xFF	; 255
     884:	8f 4f       	sbci	r24, 0xFF	; 255
     886:	9f 4f       	sbci	r25, 0xFF	; 255
     888:	99 23       	and	r25, r25
     88a:	a9 f0       	breq	.+42     	; 0x8b6 <__floatsisf+0x40>
     88c:	f9 2f       	mov	r31, r25
     88e:	96 e9       	ldi	r25, 0x96	; 150
     890:	bb 27       	eor	r27, r27
     892:	93 95       	inc	r25
     894:	f6 95       	lsr	r31
     896:	87 95       	ror	r24
     898:	77 95       	ror	r23
     89a:	67 95       	ror	r22
     89c:	b7 95       	ror	r27
     89e:	f1 11       	cpse	r31, r1
     8a0:	f8 cf       	rjmp	.-16     	; 0x892 <__floatsisf+0x1c>
     8a2:	fa f4       	brpl	.+62     	; 0x8e2 <__floatsisf+0x6c>
     8a4:	bb 0f       	add	r27, r27
     8a6:	11 f4       	brne	.+4      	; 0x8ac <__floatsisf+0x36>
     8a8:	60 ff       	sbrs	r22, 0
     8aa:	1b c0       	rjmp	.+54     	; 0x8e2 <__floatsisf+0x6c>
     8ac:	6f 5f       	subi	r22, 0xFF	; 255
     8ae:	7f 4f       	sbci	r23, 0xFF	; 255
     8b0:	8f 4f       	sbci	r24, 0xFF	; 255
     8b2:	9f 4f       	sbci	r25, 0xFF	; 255
     8b4:	16 c0       	rjmp	.+44     	; 0x8e2 <__floatsisf+0x6c>
     8b6:	88 23       	and	r24, r24
     8b8:	11 f0       	breq	.+4      	; 0x8be <__floatsisf+0x48>
     8ba:	96 e9       	ldi	r25, 0x96	; 150
     8bc:	11 c0       	rjmp	.+34     	; 0x8e0 <__floatsisf+0x6a>
     8be:	77 23       	and	r23, r23
     8c0:	21 f0       	breq	.+8      	; 0x8ca <__floatsisf+0x54>
     8c2:	9e e8       	ldi	r25, 0x8E	; 142
     8c4:	87 2f       	mov	r24, r23
     8c6:	76 2f       	mov	r23, r22
     8c8:	05 c0       	rjmp	.+10     	; 0x8d4 <__floatsisf+0x5e>
     8ca:	66 23       	and	r22, r22
     8cc:	71 f0       	breq	.+28     	; 0x8ea <__floatsisf+0x74>
     8ce:	96 e8       	ldi	r25, 0x86	; 134
     8d0:	86 2f       	mov	r24, r22
     8d2:	70 e0       	ldi	r23, 0x00	; 0
     8d4:	60 e0       	ldi	r22, 0x00	; 0
     8d6:	2a f0       	brmi	.+10     	; 0x8e2 <__floatsisf+0x6c>
     8d8:	9a 95       	dec	r25
     8da:	66 0f       	add	r22, r22
     8dc:	77 1f       	adc	r23, r23
     8de:	88 1f       	adc	r24, r24
     8e0:	da f7       	brpl	.-10     	; 0x8d8 <__floatsisf+0x62>
     8e2:	88 0f       	add	r24, r24
     8e4:	96 95       	lsr	r25
     8e6:	87 95       	ror	r24
     8e8:	97 f9       	bld	r25, 7
     8ea:	08 95       	ret

000008ec <__divmodhi4>:
     8ec:	97 fb       	bst	r25, 7
     8ee:	07 2e       	mov	r0, r23
     8f0:	16 f4       	brtc	.+4      	; 0x8f6 <__divmodhi4+0xa>
     8f2:	00 94       	com	r0
     8f4:	07 d0       	rcall	.+14     	; 0x904 <__divmodhi4_neg1>
     8f6:	77 fd       	sbrc	r23, 7
     8f8:	09 d0       	rcall	.+18     	; 0x90c <__divmodhi4_neg2>
     8fa:	0e 94 8a 04 	call	0x914	; 0x914 <__udivmodhi4>
     8fe:	07 fc       	sbrc	r0, 7
     900:	05 d0       	rcall	.+10     	; 0x90c <__divmodhi4_neg2>
     902:	3e f4       	brtc	.+14     	; 0x912 <__divmodhi4_exit>

00000904 <__divmodhi4_neg1>:
     904:	90 95       	com	r25
     906:	81 95       	neg	r24
     908:	9f 4f       	sbci	r25, 0xFF	; 255
     90a:	08 95       	ret

0000090c <__divmodhi4_neg2>:
     90c:	70 95       	com	r23
     90e:	61 95       	neg	r22
     910:	7f 4f       	sbci	r23, 0xFF	; 255

00000912 <__divmodhi4_exit>:
     912:	08 95       	ret

00000914 <__udivmodhi4>:
     914:	aa 1b       	sub	r26, r26
     916:	bb 1b       	sub	r27, r27
     918:	51 e1       	ldi	r21, 0x11	; 17
     91a:	07 c0       	rjmp	.+14     	; 0x92a <__udivmodhi4_ep>

0000091c <__udivmodhi4_loop>:
     91c:	aa 1f       	adc	r26, r26
     91e:	bb 1f       	adc	r27, r27
     920:	a6 17       	cp	r26, r22
     922:	b7 07       	cpc	r27, r23
     924:	10 f0       	brcs	.+4      	; 0x92a <__udivmodhi4_ep>
     926:	a6 1b       	sub	r26, r22
     928:	b7 0b       	sbc	r27, r23

0000092a <__udivmodhi4_ep>:
     92a:	88 1f       	adc	r24, r24
     92c:	99 1f       	adc	r25, r25
     92e:	5a 95       	dec	r21
     930:	a9 f7       	brne	.-22     	; 0x91c <__udivmodhi4_loop>
     932:	80 95       	com	r24
     934:	90 95       	com	r25
     936:	bc 01       	movw	r22, r24
     938:	cd 01       	movw	r24, r26
     93a:	08 95       	ret

0000093c <dtostrf>:
     93c:	ef 92       	push	r14
     93e:	0f 93       	push	r16
     940:	1f 93       	push	r17
     942:	cf 93       	push	r28
     944:	df 93       	push	r29
     946:	e8 01       	movw	r28, r16
     948:	47 fd       	sbrc	r20, 7
     94a:	02 c0       	rjmp	.+4      	; 0x950 <dtostrf+0x14>
     94c:	34 e0       	ldi	r19, 0x04	; 4
     94e:	01 c0       	rjmp	.+2      	; 0x952 <dtostrf+0x16>
     950:	34 e1       	ldi	r19, 0x14	; 20
     952:	04 2e       	mov	r0, r20
     954:	00 0c       	add	r0, r0
     956:	55 0b       	sbc	r21, r21
     958:	57 ff       	sbrs	r21, 7
     95a:	03 c0       	rjmp	.+6      	; 0x962 <dtostrf+0x26>
     95c:	51 95       	neg	r21
     95e:	41 95       	neg	r20
     960:	51 09       	sbc	r21, r1
     962:	e3 2e       	mov	r14, r19
     964:	02 2f       	mov	r16, r18
     966:	24 2f       	mov	r18, r20
     968:	ae 01       	movw	r20, r28
     96a:	0e 94 1d 07 	call	0xe3a	; 0xe3a <dtoa_prf>
     96e:	ce 01       	movw	r24, r28
     970:	df 91       	pop	r29
     972:	cf 91       	pop	r28
     974:	1f 91       	pop	r17
     976:	0f 91       	pop	r16
     978:	ef 90       	pop	r14
     97a:	08 95       	ret

0000097c <do_rand>:
     97c:	8f 92       	push	r8
     97e:	9f 92       	push	r9
     980:	af 92       	push	r10
     982:	bf 92       	push	r11
     984:	cf 92       	push	r12
     986:	df 92       	push	r13
     988:	ef 92       	push	r14
     98a:	ff 92       	push	r15
     98c:	cf 93       	push	r28
     98e:	df 93       	push	r29
     990:	ec 01       	movw	r28, r24
     992:	68 81       	ld	r22, Y
     994:	79 81       	ldd	r23, Y+1	; 0x01
     996:	8a 81       	ldd	r24, Y+2	; 0x02
     998:	9b 81       	ldd	r25, Y+3	; 0x03
     99a:	61 15       	cp	r22, r1
     99c:	71 05       	cpc	r23, r1
     99e:	81 05       	cpc	r24, r1
     9a0:	91 05       	cpc	r25, r1
     9a2:	21 f4       	brne	.+8      	; 0x9ac <do_rand+0x30>
     9a4:	64 e2       	ldi	r22, 0x24	; 36
     9a6:	79 ed       	ldi	r23, 0xD9	; 217
     9a8:	8b e5       	ldi	r24, 0x5B	; 91
     9aa:	97 e0       	ldi	r25, 0x07	; 7
     9ac:	2d e1       	ldi	r18, 0x1D	; 29
     9ae:	33 ef       	ldi	r19, 0xF3	; 243
     9b0:	41 e0       	ldi	r20, 0x01	; 1
     9b2:	50 e0       	ldi	r21, 0x00	; 0
     9b4:	0e 94 ff 09 	call	0x13fe	; 0x13fe <__divmodsi4>
     9b8:	49 01       	movw	r8, r18
     9ba:	5a 01       	movw	r10, r20
     9bc:	9b 01       	movw	r18, r22
     9be:	ac 01       	movw	r20, r24
     9c0:	a7 ea       	ldi	r26, 0xA7	; 167
     9c2:	b1 e4       	ldi	r27, 0x41	; 65
     9c4:	0e 94 1e 0a 	call	0x143c	; 0x143c <__muluhisi3>
     9c8:	6b 01       	movw	r12, r22
     9ca:	7c 01       	movw	r14, r24
     9cc:	ac ee       	ldi	r26, 0xEC	; 236
     9ce:	b4 ef       	ldi	r27, 0xF4	; 244
     9d0:	a5 01       	movw	r20, r10
     9d2:	94 01       	movw	r18, r8
     9d4:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__mulohisi3>
     9d8:	dc 01       	movw	r26, r24
     9da:	cb 01       	movw	r24, r22
     9dc:	8c 0d       	add	r24, r12
     9de:	9d 1d       	adc	r25, r13
     9e0:	ae 1d       	adc	r26, r14
     9e2:	bf 1d       	adc	r27, r15
     9e4:	b7 ff       	sbrs	r27, 7
     9e6:	03 c0       	rjmp	.+6      	; 0x9ee <do_rand+0x72>
     9e8:	01 97       	sbiw	r24, 0x01	; 1
     9ea:	a1 09       	sbc	r26, r1
     9ec:	b0 48       	sbci	r27, 0x80	; 128
     9ee:	88 83       	st	Y, r24
     9f0:	99 83       	std	Y+1, r25	; 0x01
     9f2:	aa 83       	std	Y+2, r26	; 0x02
     9f4:	bb 83       	std	Y+3, r27	; 0x03
     9f6:	9f 77       	andi	r25, 0x7F	; 127
     9f8:	df 91       	pop	r29
     9fa:	cf 91       	pop	r28
     9fc:	ff 90       	pop	r15
     9fe:	ef 90       	pop	r14
     a00:	df 90       	pop	r13
     a02:	cf 90       	pop	r12
     a04:	bf 90       	pop	r11
     a06:	af 90       	pop	r10
     a08:	9f 90       	pop	r9
     a0a:	8f 90       	pop	r8
     a0c:	08 95       	ret

00000a0e <rand_r>:
     a0e:	0e 94 be 04 	call	0x97c	; 0x97c <do_rand>
     a12:	08 95       	ret

00000a14 <rand>:
     a14:	80 e6       	ldi	r24, 0x60	; 96
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	0e 94 be 04 	call	0x97c	; 0x97c <do_rand>
     a1c:	08 95       	ret

00000a1e <srand>:
     a1e:	a0 e0       	ldi	r26, 0x00	; 0
     a20:	b0 e0       	ldi	r27, 0x00	; 0
     a22:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
     a26:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__data_start+0x1>
     a2a:	a0 93 62 00 	sts	0x0062, r26	; 0x800062 <__data_start+0x2>
     a2e:	b0 93 63 00 	sts	0x0063, r27	; 0x800063 <__data_start+0x3>
     a32:	08 95       	ret

00000a34 <sprintf>:
     a34:	ae e0       	ldi	r26, 0x0E	; 14
     a36:	b0 e0       	ldi	r27, 0x00	; 0
     a38:	e0 e2       	ldi	r30, 0x20	; 32
     a3a:	f5 e0       	ldi	r31, 0x05	; 5
     a3c:	0c 94 3f 0a 	jmp	0x147e	; 0x147e <__prologue_saves__+0x1c>
     a40:	0d 89       	ldd	r16, Y+21	; 0x15
     a42:	1e 89       	ldd	r17, Y+22	; 0x16
     a44:	86 e0       	ldi	r24, 0x06	; 6
     a46:	8c 83       	std	Y+4, r24	; 0x04
     a48:	1a 83       	std	Y+2, r17	; 0x02
     a4a:	09 83       	std	Y+1, r16	; 0x01
     a4c:	8f ef       	ldi	r24, 0xFF	; 255
     a4e:	9f e7       	ldi	r25, 0x7F	; 127
     a50:	9e 83       	std	Y+6, r25	; 0x06
     a52:	8d 83       	std	Y+5, r24	; 0x05
     a54:	ae 01       	movw	r20, r28
     a56:	47 5e       	subi	r20, 0xE7	; 231
     a58:	5f 4f       	sbci	r21, 0xFF	; 255
     a5a:	6f 89       	ldd	r22, Y+23	; 0x17
     a5c:	78 8d       	ldd	r23, Y+24	; 0x18
     a5e:	ce 01       	movw	r24, r28
     a60:	01 96       	adiw	r24, 0x01	; 1
     a62:	0e 94 3c 05 	call	0xa78	; 0xa78 <vfprintf>
     a66:	ef 81       	ldd	r30, Y+7	; 0x07
     a68:	f8 85       	ldd	r31, Y+8	; 0x08
     a6a:	e0 0f       	add	r30, r16
     a6c:	f1 1f       	adc	r31, r17
     a6e:	10 82       	st	Z, r1
     a70:	2e 96       	adiw	r28, 0x0e	; 14
     a72:	e4 e0       	ldi	r30, 0x04	; 4
     a74:	0c 94 5b 0a 	jmp	0x14b6	; 0x14b6 <__epilogue_restores__+0x1c>

00000a78 <vfprintf>:
     a78:	ab e0       	ldi	r26, 0x0B	; 11
     a7a:	b0 e0       	ldi	r27, 0x00	; 0
     a7c:	e2 e4       	ldi	r30, 0x42	; 66
     a7e:	f5 e0       	ldi	r31, 0x05	; 5
     a80:	0c 94 31 0a 	jmp	0x1462	; 0x1462 <__prologue_saves__>
     a84:	6c 01       	movw	r12, r24
     a86:	7b 01       	movw	r14, r22
     a88:	8a 01       	movw	r16, r20
     a8a:	fc 01       	movw	r30, r24
     a8c:	17 82       	std	Z+7, r1	; 0x07
     a8e:	16 82       	std	Z+6, r1	; 0x06
     a90:	83 81       	ldd	r24, Z+3	; 0x03
     a92:	81 ff       	sbrs	r24, 1
     a94:	cc c1       	rjmp	.+920    	; 0xe2e <vfprintf+0x3b6>
     a96:	ce 01       	movw	r24, r28
     a98:	01 96       	adiw	r24, 0x01	; 1
     a9a:	3c 01       	movw	r6, r24
     a9c:	f6 01       	movw	r30, r12
     a9e:	93 81       	ldd	r25, Z+3	; 0x03
     aa0:	f7 01       	movw	r30, r14
     aa2:	93 fd       	sbrc	r25, 3
     aa4:	85 91       	lpm	r24, Z+
     aa6:	93 ff       	sbrs	r25, 3
     aa8:	81 91       	ld	r24, Z+
     aaa:	7f 01       	movw	r14, r30
     aac:	88 23       	and	r24, r24
     aae:	09 f4       	brne	.+2      	; 0xab2 <vfprintf+0x3a>
     ab0:	ba c1       	rjmp	.+884    	; 0xe26 <vfprintf+0x3ae>
     ab2:	85 32       	cpi	r24, 0x25	; 37
     ab4:	39 f4       	brne	.+14     	; 0xac4 <vfprintf+0x4c>
     ab6:	93 fd       	sbrc	r25, 3
     ab8:	85 91       	lpm	r24, Z+
     aba:	93 ff       	sbrs	r25, 3
     abc:	81 91       	ld	r24, Z+
     abe:	7f 01       	movw	r14, r30
     ac0:	85 32       	cpi	r24, 0x25	; 37
     ac2:	29 f4       	brne	.+10     	; 0xace <vfprintf+0x56>
     ac4:	b6 01       	movw	r22, r12
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	0e 94 65 09 	call	0x12ca	; 0x12ca <fputc>
     acc:	e7 cf       	rjmp	.-50     	; 0xa9c <vfprintf+0x24>
     ace:	91 2c       	mov	r9, r1
     ad0:	21 2c       	mov	r2, r1
     ad2:	31 2c       	mov	r3, r1
     ad4:	ff e1       	ldi	r31, 0x1F	; 31
     ad6:	f3 15       	cp	r31, r3
     ad8:	d8 f0       	brcs	.+54     	; 0xb10 <vfprintf+0x98>
     ada:	8b 32       	cpi	r24, 0x2B	; 43
     adc:	79 f0       	breq	.+30     	; 0xafc <vfprintf+0x84>
     ade:	38 f4       	brcc	.+14     	; 0xaee <vfprintf+0x76>
     ae0:	80 32       	cpi	r24, 0x20	; 32
     ae2:	79 f0       	breq	.+30     	; 0xb02 <vfprintf+0x8a>
     ae4:	83 32       	cpi	r24, 0x23	; 35
     ae6:	a1 f4       	brne	.+40     	; 0xb10 <vfprintf+0x98>
     ae8:	23 2d       	mov	r18, r3
     aea:	20 61       	ori	r18, 0x10	; 16
     aec:	1d c0       	rjmp	.+58     	; 0xb28 <vfprintf+0xb0>
     aee:	8d 32       	cpi	r24, 0x2D	; 45
     af0:	61 f0       	breq	.+24     	; 0xb0a <vfprintf+0x92>
     af2:	80 33       	cpi	r24, 0x30	; 48
     af4:	69 f4       	brne	.+26     	; 0xb10 <vfprintf+0x98>
     af6:	23 2d       	mov	r18, r3
     af8:	21 60       	ori	r18, 0x01	; 1
     afa:	16 c0       	rjmp	.+44     	; 0xb28 <vfprintf+0xb0>
     afc:	83 2d       	mov	r24, r3
     afe:	82 60       	ori	r24, 0x02	; 2
     b00:	38 2e       	mov	r3, r24
     b02:	e3 2d       	mov	r30, r3
     b04:	e4 60       	ori	r30, 0x04	; 4
     b06:	3e 2e       	mov	r3, r30
     b08:	2a c0       	rjmp	.+84     	; 0xb5e <vfprintf+0xe6>
     b0a:	f3 2d       	mov	r31, r3
     b0c:	f8 60       	ori	r31, 0x08	; 8
     b0e:	1d c0       	rjmp	.+58     	; 0xb4a <vfprintf+0xd2>
     b10:	37 fc       	sbrc	r3, 7
     b12:	2d c0       	rjmp	.+90     	; 0xb6e <vfprintf+0xf6>
     b14:	20 ed       	ldi	r18, 0xD0	; 208
     b16:	28 0f       	add	r18, r24
     b18:	2a 30       	cpi	r18, 0x0A	; 10
     b1a:	40 f0       	brcs	.+16     	; 0xb2c <vfprintf+0xb4>
     b1c:	8e 32       	cpi	r24, 0x2E	; 46
     b1e:	b9 f4       	brne	.+46     	; 0xb4e <vfprintf+0xd6>
     b20:	36 fc       	sbrc	r3, 6
     b22:	81 c1       	rjmp	.+770    	; 0xe26 <vfprintf+0x3ae>
     b24:	23 2d       	mov	r18, r3
     b26:	20 64       	ori	r18, 0x40	; 64
     b28:	32 2e       	mov	r3, r18
     b2a:	19 c0       	rjmp	.+50     	; 0xb5e <vfprintf+0xe6>
     b2c:	36 fe       	sbrs	r3, 6
     b2e:	06 c0       	rjmp	.+12     	; 0xb3c <vfprintf+0xc4>
     b30:	8a e0       	ldi	r24, 0x0A	; 10
     b32:	98 9e       	mul	r9, r24
     b34:	20 0d       	add	r18, r0
     b36:	11 24       	eor	r1, r1
     b38:	92 2e       	mov	r9, r18
     b3a:	11 c0       	rjmp	.+34     	; 0xb5e <vfprintf+0xe6>
     b3c:	ea e0       	ldi	r30, 0x0A	; 10
     b3e:	2e 9e       	mul	r2, r30
     b40:	20 0d       	add	r18, r0
     b42:	11 24       	eor	r1, r1
     b44:	22 2e       	mov	r2, r18
     b46:	f3 2d       	mov	r31, r3
     b48:	f0 62       	ori	r31, 0x20	; 32
     b4a:	3f 2e       	mov	r3, r31
     b4c:	08 c0       	rjmp	.+16     	; 0xb5e <vfprintf+0xe6>
     b4e:	8c 36       	cpi	r24, 0x6C	; 108
     b50:	21 f4       	brne	.+8      	; 0xb5a <vfprintf+0xe2>
     b52:	83 2d       	mov	r24, r3
     b54:	80 68       	ori	r24, 0x80	; 128
     b56:	38 2e       	mov	r3, r24
     b58:	02 c0       	rjmp	.+4      	; 0xb5e <vfprintf+0xe6>
     b5a:	88 36       	cpi	r24, 0x68	; 104
     b5c:	41 f4       	brne	.+16     	; 0xb6e <vfprintf+0xf6>
     b5e:	f7 01       	movw	r30, r14
     b60:	93 fd       	sbrc	r25, 3
     b62:	85 91       	lpm	r24, Z+
     b64:	93 ff       	sbrs	r25, 3
     b66:	81 91       	ld	r24, Z+
     b68:	7f 01       	movw	r14, r30
     b6a:	81 11       	cpse	r24, r1
     b6c:	b3 cf       	rjmp	.-154    	; 0xad4 <vfprintf+0x5c>
     b6e:	98 2f       	mov	r25, r24
     b70:	9f 7d       	andi	r25, 0xDF	; 223
     b72:	95 54       	subi	r25, 0x45	; 69
     b74:	93 30       	cpi	r25, 0x03	; 3
     b76:	28 f4       	brcc	.+10     	; 0xb82 <vfprintf+0x10a>
     b78:	0c 5f       	subi	r16, 0xFC	; 252
     b7a:	1f 4f       	sbci	r17, 0xFF	; 255
     b7c:	9f e3       	ldi	r25, 0x3F	; 63
     b7e:	99 83       	std	Y+1, r25	; 0x01
     b80:	0d c0       	rjmp	.+26     	; 0xb9c <vfprintf+0x124>
     b82:	83 36       	cpi	r24, 0x63	; 99
     b84:	31 f0       	breq	.+12     	; 0xb92 <vfprintf+0x11a>
     b86:	83 37       	cpi	r24, 0x73	; 115
     b88:	71 f0       	breq	.+28     	; 0xba6 <vfprintf+0x12e>
     b8a:	83 35       	cpi	r24, 0x53	; 83
     b8c:	09 f0       	breq	.+2      	; 0xb90 <vfprintf+0x118>
     b8e:	59 c0       	rjmp	.+178    	; 0xc42 <vfprintf+0x1ca>
     b90:	21 c0       	rjmp	.+66     	; 0xbd4 <vfprintf+0x15c>
     b92:	f8 01       	movw	r30, r16
     b94:	80 81       	ld	r24, Z
     b96:	89 83       	std	Y+1, r24	; 0x01
     b98:	0e 5f       	subi	r16, 0xFE	; 254
     b9a:	1f 4f       	sbci	r17, 0xFF	; 255
     b9c:	88 24       	eor	r8, r8
     b9e:	83 94       	inc	r8
     ba0:	91 2c       	mov	r9, r1
     ba2:	53 01       	movw	r10, r6
     ba4:	13 c0       	rjmp	.+38     	; 0xbcc <vfprintf+0x154>
     ba6:	28 01       	movw	r4, r16
     ba8:	f2 e0       	ldi	r31, 0x02	; 2
     baa:	4f 0e       	add	r4, r31
     bac:	51 1c       	adc	r5, r1
     bae:	f8 01       	movw	r30, r16
     bb0:	a0 80       	ld	r10, Z
     bb2:	b1 80       	ldd	r11, Z+1	; 0x01
     bb4:	36 fe       	sbrs	r3, 6
     bb6:	03 c0       	rjmp	.+6      	; 0xbbe <vfprintf+0x146>
     bb8:	69 2d       	mov	r22, r9
     bba:	70 e0       	ldi	r23, 0x00	; 0
     bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <vfprintf+0x14a>
     bbe:	6f ef       	ldi	r22, 0xFF	; 255
     bc0:	7f ef       	ldi	r23, 0xFF	; 255
     bc2:	c5 01       	movw	r24, r10
     bc4:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <strnlen>
     bc8:	4c 01       	movw	r8, r24
     bca:	82 01       	movw	r16, r4
     bcc:	f3 2d       	mov	r31, r3
     bce:	ff 77       	andi	r31, 0x7F	; 127
     bd0:	3f 2e       	mov	r3, r31
     bd2:	16 c0       	rjmp	.+44     	; 0xc00 <vfprintf+0x188>
     bd4:	28 01       	movw	r4, r16
     bd6:	22 e0       	ldi	r18, 0x02	; 2
     bd8:	42 0e       	add	r4, r18
     bda:	51 1c       	adc	r5, r1
     bdc:	f8 01       	movw	r30, r16
     bde:	a0 80       	ld	r10, Z
     be0:	b1 80       	ldd	r11, Z+1	; 0x01
     be2:	36 fe       	sbrs	r3, 6
     be4:	03 c0       	rjmp	.+6      	; 0xbec <vfprintf+0x174>
     be6:	69 2d       	mov	r22, r9
     be8:	70 e0       	ldi	r23, 0x00	; 0
     bea:	02 c0       	rjmp	.+4      	; 0xbf0 <vfprintf+0x178>
     bec:	6f ef       	ldi	r22, 0xFF	; 255
     bee:	7f ef       	ldi	r23, 0xFF	; 255
     bf0:	c5 01       	movw	r24, r10
     bf2:	0e 94 4f 09 	call	0x129e	; 0x129e <strnlen_P>
     bf6:	4c 01       	movw	r8, r24
     bf8:	f3 2d       	mov	r31, r3
     bfa:	f0 68       	ori	r31, 0x80	; 128
     bfc:	3f 2e       	mov	r3, r31
     bfe:	82 01       	movw	r16, r4
     c00:	33 fc       	sbrc	r3, 3
     c02:	1b c0       	rjmp	.+54     	; 0xc3a <vfprintf+0x1c2>
     c04:	82 2d       	mov	r24, r2
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	88 16       	cp	r8, r24
     c0a:	99 06       	cpc	r9, r25
     c0c:	b0 f4       	brcc	.+44     	; 0xc3a <vfprintf+0x1c2>
     c0e:	b6 01       	movw	r22, r12
     c10:	80 e2       	ldi	r24, 0x20	; 32
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	0e 94 65 09 	call	0x12ca	; 0x12ca <fputc>
     c18:	2a 94       	dec	r2
     c1a:	f4 cf       	rjmp	.-24     	; 0xc04 <vfprintf+0x18c>
     c1c:	f5 01       	movw	r30, r10
     c1e:	37 fc       	sbrc	r3, 7
     c20:	85 91       	lpm	r24, Z+
     c22:	37 fe       	sbrs	r3, 7
     c24:	81 91       	ld	r24, Z+
     c26:	5f 01       	movw	r10, r30
     c28:	b6 01       	movw	r22, r12
     c2a:	90 e0       	ldi	r25, 0x00	; 0
     c2c:	0e 94 65 09 	call	0x12ca	; 0x12ca <fputc>
     c30:	21 10       	cpse	r2, r1
     c32:	2a 94       	dec	r2
     c34:	21 e0       	ldi	r18, 0x01	; 1
     c36:	82 1a       	sub	r8, r18
     c38:	91 08       	sbc	r9, r1
     c3a:	81 14       	cp	r8, r1
     c3c:	91 04       	cpc	r9, r1
     c3e:	71 f7       	brne	.-36     	; 0xc1c <vfprintf+0x1a4>
     c40:	e8 c0       	rjmp	.+464    	; 0xe12 <vfprintf+0x39a>
     c42:	84 36       	cpi	r24, 0x64	; 100
     c44:	11 f0       	breq	.+4      	; 0xc4a <vfprintf+0x1d2>
     c46:	89 36       	cpi	r24, 0x69	; 105
     c48:	41 f5       	brne	.+80     	; 0xc9a <vfprintf+0x222>
     c4a:	f8 01       	movw	r30, r16
     c4c:	37 fe       	sbrs	r3, 7
     c4e:	07 c0       	rjmp	.+14     	; 0xc5e <vfprintf+0x1e6>
     c50:	60 81       	ld	r22, Z
     c52:	71 81       	ldd	r23, Z+1	; 0x01
     c54:	82 81       	ldd	r24, Z+2	; 0x02
     c56:	93 81       	ldd	r25, Z+3	; 0x03
     c58:	0c 5f       	subi	r16, 0xFC	; 252
     c5a:	1f 4f       	sbci	r17, 0xFF	; 255
     c5c:	08 c0       	rjmp	.+16     	; 0xc6e <vfprintf+0x1f6>
     c5e:	60 81       	ld	r22, Z
     c60:	71 81       	ldd	r23, Z+1	; 0x01
     c62:	07 2e       	mov	r0, r23
     c64:	00 0c       	add	r0, r0
     c66:	88 0b       	sbc	r24, r24
     c68:	99 0b       	sbc	r25, r25
     c6a:	0e 5f       	subi	r16, 0xFE	; 254
     c6c:	1f 4f       	sbci	r17, 0xFF	; 255
     c6e:	f3 2d       	mov	r31, r3
     c70:	ff 76       	andi	r31, 0x6F	; 111
     c72:	3f 2e       	mov	r3, r31
     c74:	97 ff       	sbrs	r25, 7
     c76:	09 c0       	rjmp	.+18     	; 0xc8a <vfprintf+0x212>
     c78:	90 95       	com	r25
     c7a:	80 95       	com	r24
     c7c:	70 95       	com	r23
     c7e:	61 95       	neg	r22
     c80:	7f 4f       	sbci	r23, 0xFF	; 255
     c82:	8f 4f       	sbci	r24, 0xFF	; 255
     c84:	9f 4f       	sbci	r25, 0xFF	; 255
     c86:	f0 68       	ori	r31, 0x80	; 128
     c88:	3f 2e       	mov	r3, r31
     c8a:	2a e0       	ldi	r18, 0x0A	; 10
     c8c:	30 e0       	ldi	r19, 0x00	; 0
     c8e:	a3 01       	movw	r20, r6
     c90:	0e 94 a1 09 	call	0x1342	; 0x1342 <__ultoa_invert>
     c94:	88 2e       	mov	r8, r24
     c96:	86 18       	sub	r8, r6
     c98:	45 c0       	rjmp	.+138    	; 0xd24 <vfprintf+0x2ac>
     c9a:	85 37       	cpi	r24, 0x75	; 117
     c9c:	31 f4       	brne	.+12     	; 0xcaa <vfprintf+0x232>
     c9e:	23 2d       	mov	r18, r3
     ca0:	2f 7e       	andi	r18, 0xEF	; 239
     ca2:	b2 2e       	mov	r11, r18
     ca4:	2a e0       	ldi	r18, 0x0A	; 10
     ca6:	30 e0       	ldi	r19, 0x00	; 0
     ca8:	25 c0       	rjmp	.+74     	; 0xcf4 <vfprintf+0x27c>
     caa:	93 2d       	mov	r25, r3
     cac:	99 7f       	andi	r25, 0xF9	; 249
     cae:	b9 2e       	mov	r11, r25
     cb0:	8f 36       	cpi	r24, 0x6F	; 111
     cb2:	c1 f0       	breq	.+48     	; 0xce4 <vfprintf+0x26c>
     cb4:	18 f4       	brcc	.+6      	; 0xcbc <vfprintf+0x244>
     cb6:	88 35       	cpi	r24, 0x58	; 88
     cb8:	79 f0       	breq	.+30     	; 0xcd8 <vfprintf+0x260>
     cba:	b5 c0       	rjmp	.+362    	; 0xe26 <vfprintf+0x3ae>
     cbc:	80 37       	cpi	r24, 0x70	; 112
     cbe:	19 f0       	breq	.+6      	; 0xcc6 <vfprintf+0x24e>
     cc0:	88 37       	cpi	r24, 0x78	; 120
     cc2:	21 f0       	breq	.+8      	; 0xccc <vfprintf+0x254>
     cc4:	b0 c0       	rjmp	.+352    	; 0xe26 <vfprintf+0x3ae>
     cc6:	e9 2f       	mov	r30, r25
     cc8:	e0 61       	ori	r30, 0x10	; 16
     cca:	be 2e       	mov	r11, r30
     ccc:	b4 fe       	sbrs	r11, 4
     cce:	0d c0       	rjmp	.+26     	; 0xcea <vfprintf+0x272>
     cd0:	fb 2d       	mov	r31, r11
     cd2:	f4 60       	ori	r31, 0x04	; 4
     cd4:	bf 2e       	mov	r11, r31
     cd6:	09 c0       	rjmp	.+18     	; 0xcea <vfprintf+0x272>
     cd8:	34 fe       	sbrs	r3, 4
     cda:	0a c0       	rjmp	.+20     	; 0xcf0 <vfprintf+0x278>
     cdc:	29 2f       	mov	r18, r25
     cde:	26 60       	ori	r18, 0x06	; 6
     ce0:	b2 2e       	mov	r11, r18
     ce2:	06 c0       	rjmp	.+12     	; 0xcf0 <vfprintf+0x278>
     ce4:	28 e0       	ldi	r18, 0x08	; 8
     ce6:	30 e0       	ldi	r19, 0x00	; 0
     ce8:	05 c0       	rjmp	.+10     	; 0xcf4 <vfprintf+0x27c>
     cea:	20 e1       	ldi	r18, 0x10	; 16
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	02 c0       	rjmp	.+4      	; 0xcf4 <vfprintf+0x27c>
     cf0:	20 e1       	ldi	r18, 0x10	; 16
     cf2:	32 e0       	ldi	r19, 0x02	; 2
     cf4:	f8 01       	movw	r30, r16
     cf6:	b7 fe       	sbrs	r11, 7
     cf8:	07 c0       	rjmp	.+14     	; 0xd08 <vfprintf+0x290>
     cfa:	60 81       	ld	r22, Z
     cfc:	71 81       	ldd	r23, Z+1	; 0x01
     cfe:	82 81       	ldd	r24, Z+2	; 0x02
     d00:	93 81       	ldd	r25, Z+3	; 0x03
     d02:	0c 5f       	subi	r16, 0xFC	; 252
     d04:	1f 4f       	sbci	r17, 0xFF	; 255
     d06:	06 c0       	rjmp	.+12     	; 0xd14 <vfprintf+0x29c>
     d08:	60 81       	ld	r22, Z
     d0a:	71 81       	ldd	r23, Z+1	; 0x01
     d0c:	80 e0       	ldi	r24, 0x00	; 0
     d0e:	90 e0       	ldi	r25, 0x00	; 0
     d10:	0e 5f       	subi	r16, 0xFE	; 254
     d12:	1f 4f       	sbci	r17, 0xFF	; 255
     d14:	a3 01       	movw	r20, r6
     d16:	0e 94 a1 09 	call	0x1342	; 0x1342 <__ultoa_invert>
     d1a:	88 2e       	mov	r8, r24
     d1c:	86 18       	sub	r8, r6
     d1e:	fb 2d       	mov	r31, r11
     d20:	ff 77       	andi	r31, 0x7F	; 127
     d22:	3f 2e       	mov	r3, r31
     d24:	36 fe       	sbrs	r3, 6
     d26:	0d c0       	rjmp	.+26     	; 0xd42 <vfprintf+0x2ca>
     d28:	23 2d       	mov	r18, r3
     d2a:	2e 7f       	andi	r18, 0xFE	; 254
     d2c:	a2 2e       	mov	r10, r18
     d2e:	89 14       	cp	r8, r9
     d30:	58 f4       	brcc	.+22     	; 0xd48 <vfprintf+0x2d0>
     d32:	34 fe       	sbrs	r3, 4
     d34:	0b c0       	rjmp	.+22     	; 0xd4c <vfprintf+0x2d4>
     d36:	32 fc       	sbrc	r3, 2
     d38:	09 c0       	rjmp	.+18     	; 0xd4c <vfprintf+0x2d4>
     d3a:	83 2d       	mov	r24, r3
     d3c:	8e 7e       	andi	r24, 0xEE	; 238
     d3e:	a8 2e       	mov	r10, r24
     d40:	05 c0       	rjmp	.+10     	; 0xd4c <vfprintf+0x2d4>
     d42:	b8 2c       	mov	r11, r8
     d44:	a3 2c       	mov	r10, r3
     d46:	03 c0       	rjmp	.+6      	; 0xd4e <vfprintf+0x2d6>
     d48:	b8 2c       	mov	r11, r8
     d4a:	01 c0       	rjmp	.+2      	; 0xd4e <vfprintf+0x2d6>
     d4c:	b9 2c       	mov	r11, r9
     d4e:	a4 fe       	sbrs	r10, 4
     d50:	0f c0       	rjmp	.+30     	; 0xd70 <vfprintf+0x2f8>
     d52:	fe 01       	movw	r30, r28
     d54:	e8 0d       	add	r30, r8
     d56:	f1 1d       	adc	r31, r1
     d58:	80 81       	ld	r24, Z
     d5a:	80 33       	cpi	r24, 0x30	; 48
     d5c:	21 f4       	brne	.+8      	; 0xd66 <vfprintf+0x2ee>
     d5e:	9a 2d       	mov	r25, r10
     d60:	99 7e       	andi	r25, 0xE9	; 233
     d62:	a9 2e       	mov	r10, r25
     d64:	09 c0       	rjmp	.+18     	; 0xd78 <vfprintf+0x300>
     d66:	a2 fe       	sbrs	r10, 2
     d68:	06 c0       	rjmp	.+12     	; 0xd76 <vfprintf+0x2fe>
     d6a:	b3 94       	inc	r11
     d6c:	b3 94       	inc	r11
     d6e:	04 c0       	rjmp	.+8      	; 0xd78 <vfprintf+0x300>
     d70:	8a 2d       	mov	r24, r10
     d72:	86 78       	andi	r24, 0x86	; 134
     d74:	09 f0       	breq	.+2      	; 0xd78 <vfprintf+0x300>
     d76:	b3 94       	inc	r11
     d78:	a3 fc       	sbrc	r10, 3
     d7a:	11 c0       	rjmp	.+34     	; 0xd9e <vfprintf+0x326>
     d7c:	a0 fe       	sbrs	r10, 0
     d7e:	06 c0       	rjmp	.+12     	; 0xd8c <vfprintf+0x314>
     d80:	b2 14       	cp	r11, r2
     d82:	88 f4       	brcc	.+34     	; 0xda6 <vfprintf+0x32e>
     d84:	28 0c       	add	r2, r8
     d86:	92 2c       	mov	r9, r2
     d88:	9b 18       	sub	r9, r11
     d8a:	0e c0       	rjmp	.+28     	; 0xda8 <vfprintf+0x330>
     d8c:	b2 14       	cp	r11, r2
     d8e:	60 f4       	brcc	.+24     	; 0xda8 <vfprintf+0x330>
     d90:	b6 01       	movw	r22, r12
     d92:	80 e2       	ldi	r24, 0x20	; 32
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	0e 94 65 09 	call	0x12ca	; 0x12ca <fputc>
     d9a:	b3 94       	inc	r11
     d9c:	f7 cf       	rjmp	.-18     	; 0xd8c <vfprintf+0x314>
     d9e:	b2 14       	cp	r11, r2
     da0:	18 f4       	brcc	.+6      	; 0xda8 <vfprintf+0x330>
     da2:	2b 18       	sub	r2, r11
     da4:	02 c0       	rjmp	.+4      	; 0xdaa <vfprintf+0x332>
     da6:	98 2c       	mov	r9, r8
     da8:	21 2c       	mov	r2, r1
     daa:	a4 fe       	sbrs	r10, 4
     dac:	10 c0       	rjmp	.+32     	; 0xdce <vfprintf+0x356>
     dae:	b6 01       	movw	r22, r12
     db0:	80 e3       	ldi	r24, 0x30	; 48
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	0e 94 65 09 	call	0x12ca	; 0x12ca <fputc>
     db8:	a2 fe       	sbrs	r10, 2
     dba:	17 c0       	rjmp	.+46     	; 0xdea <vfprintf+0x372>
     dbc:	a1 fc       	sbrc	r10, 1
     dbe:	03 c0       	rjmp	.+6      	; 0xdc6 <vfprintf+0x34e>
     dc0:	88 e7       	ldi	r24, 0x78	; 120
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	02 c0       	rjmp	.+4      	; 0xdca <vfprintf+0x352>
     dc6:	88 e5       	ldi	r24, 0x58	; 88
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	b6 01       	movw	r22, r12
     dcc:	0c c0       	rjmp	.+24     	; 0xde6 <vfprintf+0x36e>
     dce:	8a 2d       	mov	r24, r10
     dd0:	86 78       	andi	r24, 0x86	; 134
     dd2:	59 f0       	breq	.+22     	; 0xdea <vfprintf+0x372>
     dd4:	a1 fe       	sbrs	r10, 1
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <vfprintf+0x364>
     dd8:	8b e2       	ldi	r24, 0x2B	; 43
     dda:	01 c0       	rjmp	.+2      	; 0xdde <vfprintf+0x366>
     ddc:	80 e2       	ldi	r24, 0x20	; 32
     dde:	a7 fc       	sbrc	r10, 7
     de0:	8d e2       	ldi	r24, 0x2D	; 45
     de2:	b6 01       	movw	r22, r12
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	0e 94 65 09 	call	0x12ca	; 0x12ca <fputc>
     dea:	89 14       	cp	r8, r9
     dec:	38 f4       	brcc	.+14     	; 0xdfc <vfprintf+0x384>
     dee:	b6 01       	movw	r22, r12
     df0:	80 e3       	ldi	r24, 0x30	; 48
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	0e 94 65 09 	call	0x12ca	; 0x12ca <fputc>
     df8:	9a 94       	dec	r9
     dfa:	f7 cf       	rjmp	.-18     	; 0xdea <vfprintf+0x372>
     dfc:	8a 94       	dec	r8
     dfe:	f3 01       	movw	r30, r6
     e00:	e8 0d       	add	r30, r8
     e02:	f1 1d       	adc	r31, r1
     e04:	80 81       	ld	r24, Z
     e06:	b6 01       	movw	r22, r12
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	0e 94 65 09 	call	0x12ca	; 0x12ca <fputc>
     e0e:	81 10       	cpse	r8, r1
     e10:	f5 cf       	rjmp	.-22     	; 0xdfc <vfprintf+0x384>
     e12:	22 20       	and	r2, r2
     e14:	09 f4       	brne	.+2      	; 0xe18 <vfprintf+0x3a0>
     e16:	42 ce       	rjmp	.-892    	; 0xa9c <vfprintf+0x24>
     e18:	b6 01       	movw	r22, r12
     e1a:	80 e2       	ldi	r24, 0x20	; 32
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	0e 94 65 09 	call	0x12ca	; 0x12ca <fputc>
     e22:	2a 94       	dec	r2
     e24:	f6 cf       	rjmp	.-20     	; 0xe12 <vfprintf+0x39a>
     e26:	f6 01       	movw	r30, r12
     e28:	86 81       	ldd	r24, Z+6	; 0x06
     e2a:	97 81       	ldd	r25, Z+7	; 0x07
     e2c:	02 c0       	rjmp	.+4      	; 0xe32 <vfprintf+0x3ba>
     e2e:	8f ef       	ldi	r24, 0xFF	; 255
     e30:	9f ef       	ldi	r25, 0xFF	; 255
     e32:	2b 96       	adiw	r28, 0x0b	; 11
     e34:	e2 e1       	ldi	r30, 0x12	; 18
     e36:	0c 94 4d 0a 	jmp	0x149a	; 0x149a <__epilogue_restores__>

00000e3a <dtoa_prf>:
     e3a:	a9 e0       	ldi	r26, 0x09	; 9
     e3c:	b0 e0       	ldi	r27, 0x00	; 0
     e3e:	e3 e2       	ldi	r30, 0x23	; 35
     e40:	f7 e0       	ldi	r31, 0x07	; 7
     e42:	0c 94 37 0a 	jmp	0x146e	; 0x146e <__prologue_saves__+0xc>
     e46:	6a 01       	movw	r12, r20
     e48:	12 2f       	mov	r17, r18
     e4a:	b0 2e       	mov	r11, r16
     e4c:	2b e3       	ldi	r18, 0x3B	; 59
     e4e:	20 17       	cp	r18, r16
     e50:	20 f0       	brcs	.+8      	; 0xe5a <dtoa_prf+0x20>
     e52:	ff 24       	eor	r15, r15
     e54:	f3 94       	inc	r15
     e56:	f0 0e       	add	r15, r16
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <dtoa_prf+0x24>
     e5a:	2c e3       	ldi	r18, 0x3C	; 60
     e5c:	f2 2e       	mov	r15, r18
     e5e:	0f 2d       	mov	r16, r15
     e60:	27 e0       	ldi	r18, 0x07	; 7
     e62:	ae 01       	movw	r20, r28
     e64:	4f 5f       	subi	r20, 0xFF	; 255
     e66:	5f 4f       	sbci	r21, 0xFF	; 255
     e68:	0e 94 77 08 	call	0x10ee	; 0x10ee <__ftoa_engine>
     e6c:	bc 01       	movw	r22, r24
     e6e:	49 81       	ldd	r20, Y+1	; 0x01
     e70:	84 2f       	mov	r24, r20
     e72:	89 70       	andi	r24, 0x09	; 9
     e74:	81 30       	cpi	r24, 0x01	; 1
     e76:	31 f0       	breq	.+12     	; 0xe84 <dtoa_prf+0x4a>
     e78:	e1 fc       	sbrc	r14, 1
     e7a:	06 c0       	rjmp	.+12     	; 0xe88 <dtoa_prf+0x4e>
     e7c:	e0 fe       	sbrs	r14, 0
     e7e:	06 c0       	rjmp	.+12     	; 0xe8c <dtoa_prf+0x52>
     e80:	90 e2       	ldi	r25, 0x20	; 32
     e82:	05 c0       	rjmp	.+10     	; 0xe8e <dtoa_prf+0x54>
     e84:	9d e2       	ldi	r25, 0x2D	; 45
     e86:	03 c0       	rjmp	.+6      	; 0xe8e <dtoa_prf+0x54>
     e88:	9b e2       	ldi	r25, 0x2B	; 43
     e8a:	01 c0       	rjmp	.+2      	; 0xe8e <dtoa_prf+0x54>
     e8c:	90 e0       	ldi	r25, 0x00	; 0
     e8e:	5e 2d       	mov	r21, r14
     e90:	50 71       	andi	r21, 0x10	; 16
     e92:	43 ff       	sbrs	r20, 3
     e94:	3c c0       	rjmp	.+120    	; 0xf0e <dtoa_prf+0xd4>
     e96:	91 11       	cpse	r25, r1
     e98:	02 c0       	rjmp	.+4      	; 0xe9e <dtoa_prf+0x64>
     e9a:	83 e0       	ldi	r24, 0x03	; 3
     e9c:	01 c0       	rjmp	.+2      	; 0xea0 <dtoa_prf+0x66>
     e9e:	84 e0       	ldi	r24, 0x04	; 4
     ea0:	81 17       	cp	r24, r17
     ea2:	18 f4       	brcc	.+6      	; 0xeaa <dtoa_prf+0x70>
     ea4:	21 2f       	mov	r18, r17
     ea6:	28 1b       	sub	r18, r24
     ea8:	01 c0       	rjmp	.+2      	; 0xeac <dtoa_prf+0x72>
     eaa:	20 e0       	ldi	r18, 0x00	; 0
     eac:	51 11       	cpse	r21, r1
     eae:	0b c0       	rjmp	.+22     	; 0xec6 <dtoa_prf+0x8c>
     eb0:	f6 01       	movw	r30, r12
     eb2:	82 2f       	mov	r24, r18
     eb4:	30 e2       	ldi	r19, 0x20	; 32
     eb6:	88 23       	and	r24, r24
     eb8:	19 f0       	breq	.+6      	; 0xec0 <dtoa_prf+0x86>
     eba:	31 93       	st	Z+, r19
     ebc:	81 50       	subi	r24, 0x01	; 1
     ebe:	fb cf       	rjmp	.-10     	; 0xeb6 <dtoa_prf+0x7c>
     ec0:	c2 0e       	add	r12, r18
     ec2:	d1 1c       	adc	r13, r1
     ec4:	20 e0       	ldi	r18, 0x00	; 0
     ec6:	99 23       	and	r25, r25
     ec8:	29 f0       	breq	.+10     	; 0xed4 <dtoa_prf+0x9a>
     eca:	d6 01       	movw	r26, r12
     ecc:	9c 93       	st	X, r25
     ece:	f6 01       	movw	r30, r12
     ed0:	31 96       	adiw	r30, 0x01	; 1
     ed2:	6f 01       	movw	r12, r30
     ed4:	c6 01       	movw	r24, r12
     ed6:	03 96       	adiw	r24, 0x03	; 3
     ed8:	e2 fe       	sbrs	r14, 2
     eda:	0a c0       	rjmp	.+20     	; 0xef0 <dtoa_prf+0xb6>
     edc:	3e e4       	ldi	r19, 0x4E	; 78
     ede:	d6 01       	movw	r26, r12
     ee0:	3c 93       	st	X, r19
     ee2:	41 e4       	ldi	r20, 0x41	; 65
     ee4:	11 96       	adiw	r26, 0x01	; 1
     ee6:	4c 93       	st	X, r20
     ee8:	11 97       	sbiw	r26, 0x01	; 1
     eea:	12 96       	adiw	r26, 0x02	; 2
     eec:	3c 93       	st	X, r19
     eee:	06 c0       	rjmp	.+12     	; 0xefc <dtoa_prf+0xc2>
     ef0:	3e e6       	ldi	r19, 0x6E	; 110
     ef2:	f6 01       	movw	r30, r12
     ef4:	30 83       	st	Z, r19
     ef6:	41 e6       	ldi	r20, 0x61	; 97
     ef8:	41 83       	std	Z+1, r20	; 0x01
     efa:	32 83       	std	Z+2, r19	; 0x02
     efc:	fc 01       	movw	r30, r24
     efe:	32 2f       	mov	r19, r18
     f00:	40 e2       	ldi	r20, 0x20	; 32
     f02:	33 23       	and	r19, r19
     f04:	09 f4       	brne	.+2      	; 0xf08 <dtoa_prf+0xce>
     f06:	42 c0       	rjmp	.+132    	; 0xf8c <dtoa_prf+0x152>
     f08:	41 93       	st	Z+, r20
     f0a:	31 50       	subi	r19, 0x01	; 1
     f0c:	fa cf       	rjmp	.-12     	; 0xf02 <dtoa_prf+0xc8>
     f0e:	42 ff       	sbrs	r20, 2
     f10:	44 c0       	rjmp	.+136    	; 0xf9a <dtoa_prf+0x160>
     f12:	91 11       	cpse	r25, r1
     f14:	02 c0       	rjmp	.+4      	; 0xf1a <dtoa_prf+0xe0>
     f16:	83 e0       	ldi	r24, 0x03	; 3
     f18:	01 c0       	rjmp	.+2      	; 0xf1c <dtoa_prf+0xe2>
     f1a:	84 e0       	ldi	r24, 0x04	; 4
     f1c:	81 17       	cp	r24, r17
     f1e:	18 f4       	brcc	.+6      	; 0xf26 <dtoa_prf+0xec>
     f20:	21 2f       	mov	r18, r17
     f22:	28 1b       	sub	r18, r24
     f24:	01 c0       	rjmp	.+2      	; 0xf28 <dtoa_prf+0xee>
     f26:	20 e0       	ldi	r18, 0x00	; 0
     f28:	51 11       	cpse	r21, r1
     f2a:	0b c0       	rjmp	.+22     	; 0xf42 <dtoa_prf+0x108>
     f2c:	f6 01       	movw	r30, r12
     f2e:	82 2f       	mov	r24, r18
     f30:	30 e2       	ldi	r19, 0x20	; 32
     f32:	88 23       	and	r24, r24
     f34:	19 f0       	breq	.+6      	; 0xf3c <dtoa_prf+0x102>
     f36:	31 93       	st	Z+, r19
     f38:	81 50       	subi	r24, 0x01	; 1
     f3a:	fb cf       	rjmp	.-10     	; 0xf32 <dtoa_prf+0xf8>
     f3c:	c2 0e       	add	r12, r18
     f3e:	d1 1c       	adc	r13, r1
     f40:	20 e0       	ldi	r18, 0x00	; 0
     f42:	99 23       	and	r25, r25
     f44:	29 f0       	breq	.+10     	; 0xf50 <dtoa_prf+0x116>
     f46:	d6 01       	movw	r26, r12
     f48:	9c 93       	st	X, r25
     f4a:	f6 01       	movw	r30, r12
     f4c:	31 96       	adiw	r30, 0x01	; 1
     f4e:	6f 01       	movw	r12, r30
     f50:	c6 01       	movw	r24, r12
     f52:	03 96       	adiw	r24, 0x03	; 3
     f54:	e2 fe       	sbrs	r14, 2
     f56:	0b c0       	rjmp	.+22     	; 0xf6e <dtoa_prf+0x134>
     f58:	39 e4       	ldi	r19, 0x49	; 73
     f5a:	d6 01       	movw	r26, r12
     f5c:	3c 93       	st	X, r19
     f5e:	3e e4       	ldi	r19, 0x4E	; 78
     f60:	11 96       	adiw	r26, 0x01	; 1
     f62:	3c 93       	st	X, r19
     f64:	11 97       	sbiw	r26, 0x01	; 1
     f66:	36 e4       	ldi	r19, 0x46	; 70
     f68:	12 96       	adiw	r26, 0x02	; 2
     f6a:	3c 93       	st	X, r19
     f6c:	07 c0       	rjmp	.+14     	; 0xf7c <dtoa_prf+0x142>
     f6e:	39 e6       	ldi	r19, 0x69	; 105
     f70:	f6 01       	movw	r30, r12
     f72:	30 83       	st	Z, r19
     f74:	3e e6       	ldi	r19, 0x6E	; 110
     f76:	31 83       	std	Z+1, r19	; 0x01
     f78:	36 e6       	ldi	r19, 0x66	; 102
     f7a:	32 83       	std	Z+2, r19	; 0x02
     f7c:	fc 01       	movw	r30, r24
     f7e:	32 2f       	mov	r19, r18
     f80:	40 e2       	ldi	r20, 0x20	; 32
     f82:	33 23       	and	r19, r19
     f84:	19 f0       	breq	.+6      	; 0xf8c <dtoa_prf+0x152>
     f86:	41 93       	st	Z+, r20
     f88:	31 50       	subi	r19, 0x01	; 1
     f8a:	fb cf       	rjmp	.-10     	; 0xf82 <dtoa_prf+0x148>
     f8c:	fc 01       	movw	r30, r24
     f8e:	e2 0f       	add	r30, r18
     f90:	f1 1d       	adc	r31, r1
     f92:	10 82       	st	Z, r1
     f94:	8e ef       	ldi	r24, 0xFE	; 254
     f96:	9f ef       	ldi	r25, 0xFF	; 255
     f98:	a6 c0       	rjmp	.+332    	; 0x10e6 <dtoa_prf+0x2ac>
     f9a:	21 e0       	ldi	r18, 0x01	; 1
     f9c:	30 e0       	ldi	r19, 0x00	; 0
     f9e:	91 11       	cpse	r25, r1
     fa0:	02 c0       	rjmp	.+4      	; 0xfa6 <dtoa_prf+0x16c>
     fa2:	20 e0       	ldi	r18, 0x00	; 0
     fa4:	30 e0       	ldi	r19, 0x00	; 0
     fa6:	16 16       	cp	r1, r22
     fa8:	17 06       	cpc	r1, r23
     faa:	1c f4       	brge	.+6      	; 0xfb2 <dtoa_prf+0x178>
     fac:	fb 01       	movw	r30, r22
     fae:	31 96       	adiw	r30, 0x01	; 1
     fb0:	02 c0       	rjmp	.+4      	; 0xfb6 <dtoa_prf+0x17c>
     fb2:	e1 e0       	ldi	r30, 0x01	; 1
     fb4:	f0 e0       	ldi	r31, 0x00	; 0
     fb6:	2e 0f       	add	r18, r30
     fb8:	3f 1f       	adc	r19, r31
     fba:	bb 20       	and	r11, r11
     fbc:	21 f0       	breq	.+8      	; 0xfc6 <dtoa_prf+0x18c>
     fbe:	eb 2d       	mov	r30, r11
     fc0:	f0 e0       	ldi	r31, 0x00	; 0
     fc2:	31 96       	adiw	r30, 0x01	; 1
     fc4:	02 c0       	rjmp	.+4      	; 0xfca <dtoa_prf+0x190>
     fc6:	e0 e0       	ldi	r30, 0x00	; 0
     fc8:	f0 e0       	ldi	r31, 0x00	; 0
     fca:	2e 0f       	add	r18, r30
     fcc:	3f 1f       	adc	r19, r31
     fce:	e1 2f       	mov	r30, r17
     fd0:	f0 e0       	ldi	r31, 0x00	; 0
     fd2:	2e 17       	cp	r18, r30
     fd4:	3f 07       	cpc	r19, r31
     fd6:	1c f4       	brge	.+6      	; 0xfde <dtoa_prf+0x1a4>
     fd8:	12 1b       	sub	r17, r18
     fda:	21 2f       	mov	r18, r17
     fdc:	01 c0       	rjmp	.+2      	; 0xfe0 <dtoa_prf+0x1a6>
     fde:	20 e0       	ldi	r18, 0x00	; 0
     fe0:	8e 2d       	mov	r24, r14
     fe2:	88 71       	andi	r24, 0x18	; 24
     fe4:	59 f4       	brne	.+22     	; 0xffc <dtoa_prf+0x1c2>
     fe6:	f6 01       	movw	r30, r12
     fe8:	82 2f       	mov	r24, r18
     fea:	30 e2       	ldi	r19, 0x20	; 32
     fec:	88 23       	and	r24, r24
     fee:	19 f0       	breq	.+6      	; 0xff6 <dtoa_prf+0x1bc>
     ff0:	31 93       	st	Z+, r19
     ff2:	81 50       	subi	r24, 0x01	; 1
     ff4:	fb cf       	rjmp	.-10     	; 0xfec <dtoa_prf+0x1b2>
     ff6:	c2 0e       	add	r12, r18
     ff8:	d1 1c       	adc	r13, r1
     ffa:	20 e0       	ldi	r18, 0x00	; 0
     ffc:	99 23       	and	r25, r25
     ffe:	29 f0       	breq	.+10     	; 0x100a <dtoa_prf+0x1d0>
    1000:	d6 01       	movw	r26, r12
    1002:	9c 93       	st	X, r25
    1004:	f6 01       	movw	r30, r12
    1006:	31 96       	adiw	r30, 0x01	; 1
    1008:	6f 01       	movw	r12, r30
    100a:	51 11       	cpse	r21, r1
    100c:	0b c0       	rjmp	.+22     	; 0x1024 <dtoa_prf+0x1ea>
    100e:	f6 01       	movw	r30, r12
    1010:	82 2f       	mov	r24, r18
    1012:	90 e3       	ldi	r25, 0x30	; 48
    1014:	88 23       	and	r24, r24
    1016:	19 f0       	breq	.+6      	; 0x101e <dtoa_prf+0x1e4>
    1018:	91 93       	st	Z+, r25
    101a:	81 50       	subi	r24, 0x01	; 1
    101c:	fb cf       	rjmp	.-10     	; 0x1014 <dtoa_prf+0x1da>
    101e:	c2 0e       	add	r12, r18
    1020:	d1 1c       	adc	r13, r1
    1022:	20 e0       	ldi	r18, 0x00	; 0
    1024:	0f 2d       	mov	r16, r15
    1026:	06 0f       	add	r16, r22
    1028:	9a 81       	ldd	r25, Y+2	; 0x02
    102a:	34 2f       	mov	r19, r20
    102c:	30 71       	andi	r19, 0x10	; 16
    102e:	44 ff       	sbrs	r20, 4
    1030:	03 c0       	rjmp	.+6      	; 0x1038 <dtoa_prf+0x1fe>
    1032:	91 33       	cpi	r25, 0x31	; 49
    1034:	09 f4       	brne	.+2      	; 0x1038 <dtoa_prf+0x1fe>
    1036:	01 50       	subi	r16, 0x01	; 1
    1038:	10 16       	cp	r1, r16
    103a:	24 f4       	brge	.+8      	; 0x1044 <dtoa_prf+0x20a>
    103c:	09 30       	cpi	r16, 0x09	; 9
    103e:	18 f0       	brcs	.+6      	; 0x1046 <dtoa_prf+0x20c>
    1040:	08 e0       	ldi	r16, 0x08	; 8
    1042:	01 c0       	rjmp	.+2      	; 0x1046 <dtoa_prf+0x20c>
    1044:	01 e0       	ldi	r16, 0x01	; 1
    1046:	ab 01       	movw	r20, r22
    1048:	77 ff       	sbrs	r23, 7
    104a:	02 c0       	rjmp	.+4      	; 0x1050 <dtoa_prf+0x216>
    104c:	40 e0       	ldi	r20, 0x00	; 0
    104e:	50 e0       	ldi	r21, 0x00	; 0
    1050:	fb 01       	movw	r30, r22
    1052:	e4 1b       	sub	r30, r20
    1054:	f5 0b       	sbc	r31, r21
    1056:	a1 e0       	ldi	r26, 0x01	; 1
    1058:	b0 e0       	ldi	r27, 0x00	; 0
    105a:	ac 0f       	add	r26, r28
    105c:	bd 1f       	adc	r27, r29
    105e:	ea 0f       	add	r30, r26
    1060:	fb 1f       	adc	r31, r27
    1062:	8e e2       	ldi	r24, 0x2E	; 46
    1064:	a8 2e       	mov	r10, r24
    1066:	4b 01       	movw	r8, r22
    1068:	80 1a       	sub	r8, r16
    106a:	91 08       	sbc	r9, r1
    106c:	0b 2d       	mov	r16, r11
    106e:	10 e0       	ldi	r17, 0x00	; 0
    1070:	11 95       	neg	r17
    1072:	01 95       	neg	r16
    1074:	11 09       	sbc	r17, r1
    1076:	4f 3f       	cpi	r20, 0xFF	; 255
    1078:	bf ef       	ldi	r27, 0xFF	; 255
    107a:	5b 07       	cpc	r21, r27
    107c:	21 f4       	brne	.+8      	; 0x1086 <dtoa_prf+0x24c>
    107e:	d6 01       	movw	r26, r12
    1080:	ac 92       	st	X, r10
    1082:	11 96       	adiw	r26, 0x01	; 1
    1084:	6d 01       	movw	r12, r26
    1086:	64 17       	cp	r22, r20
    1088:	75 07       	cpc	r23, r21
    108a:	2c f0       	brlt	.+10     	; 0x1096 <dtoa_prf+0x25c>
    108c:	84 16       	cp	r8, r20
    108e:	95 06       	cpc	r9, r21
    1090:	14 f4       	brge	.+4      	; 0x1096 <dtoa_prf+0x25c>
    1092:	81 81       	ldd	r24, Z+1	; 0x01
    1094:	01 c0       	rjmp	.+2      	; 0x1098 <dtoa_prf+0x25e>
    1096:	80 e3       	ldi	r24, 0x30	; 48
    1098:	41 50       	subi	r20, 0x01	; 1
    109a:	51 09       	sbc	r21, r1
    109c:	31 96       	adiw	r30, 0x01	; 1
    109e:	d6 01       	movw	r26, r12
    10a0:	11 96       	adiw	r26, 0x01	; 1
    10a2:	7d 01       	movw	r14, r26
    10a4:	40 17       	cp	r20, r16
    10a6:	51 07       	cpc	r21, r17
    10a8:	24 f0       	brlt	.+8      	; 0x10b2 <dtoa_prf+0x278>
    10aa:	d6 01       	movw	r26, r12
    10ac:	8c 93       	st	X, r24
    10ae:	67 01       	movw	r12, r14
    10b0:	e2 cf       	rjmp	.-60     	; 0x1076 <dtoa_prf+0x23c>
    10b2:	64 17       	cp	r22, r20
    10b4:	75 07       	cpc	r23, r21
    10b6:	39 f4       	brne	.+14     	; 0x10c6 <dtoa_prf+0x28c>
    10b8:	96 33       	cpi	r25, 0x36	; 54
    10ba:	20 f4       	brcc	.+8      	; 0x10c4 <dtoa_prf+0x28a>
    10bc:	95 33       	cpi	r25, 0x35	; 53
    10be:	19 f4       	brne	.+6      	; 0x10c6 <dtoa_prf+0x28c>
    10c0:	31 11       	cpse	r19, r1
    10c2:	01 c0       	rjmp	.+2      	; 0x10c6 <dtoa_prf+0x28c>
    10c4:	81 e3       	ldi	r24, 0x31	; 49
    10c6:	f6 01       	movw	r30, r12
    10c8:	80 83       	st	Z, r24
    10ca:	f7 01       	movw	r30, r14
    10cc:	82 2f       	mov	r24, r18
    10ce:	90 e2       	ldi	r25, 0x20	; 32
    10d0:	88 23       	and	r24, r24
    10d2:	19 f0       	breq	.+6      	; 0x10da <dtoa_prf+0x2a0>
    10d4:	91 93       	st	Z+, r25
    10d6:	81 50       	subi	r24, 0x01	; 1
    10d8:	fb cf       	rjmp	.-10     	; 0x10d0 <dtoa_prf+0x296>
    10da:	f7 01       	movw	r30, r14
    10dc:	e2 0f       	add	r30, r18
    10de:	f1 1d       	adc	r31, r1
    10e0:	10 82       	st	Z, r1
    10e2:	80 e0       	ldi	r24, 0x00	; 0
    10e4:	90 e0       	ldi	r25, 0x00	; 0
    10e6:	29 96       	adiw	r28, 0x09	; 9
    10e8:	ec e0       	ldi	r30, 0x0C	; 12
    10ea:	0c 94 53 0a 	jmp	0x14a6	; 0x14a6 <__epilogue_restores__+0xc>

000010ee <__ftoa_engine>:
    10ee:	28 30       	cpi	r18, 0x08	; 8
    10f0:	08 f0       	brcs	.+2      	; 0x10f4 <__ftoa_engine+0x6>
    10f2:	27 e0       	ldi	r18, 0x07	; 7
    10f4:	33 27       	eor	r19, r19
    10f6:	da 01       	movw	r26, r20
    10f8:	99 0f       	add	r25, r25
    10fa:	31 1d       	adc	r19, r1
    10fc:	87 fd       	sbrc	r24, 7
    10fe:	91 60       	ori	r25, 0x01	; 1
    1100:	00 96       	adiw	r24, 0x00	; 0
    1102:	61 05       	cpc	r22, r1
    1104:	71 05       	cpc	r23, r1
    1106:	39 f4       	brne	.+14     	; 0x1116 <__ftoa_engine+0x28>
    1108:	32 60       	ori	r19, 0x02	; 2
    110a:	2e 5f       	subi	r18, 0xFE	; 254
    110c:	3d 93       	st	X+, r19
    110e:	30 e3       	ldi	r19, 0x30	; 48
    1110:	2a 95       	dec	r18
    1112:	e1 f7       	brne	.-8      	; 0x110c <__ftoa_engine+0x1e>
    1114:	08 95       	ret
    1116:	9f 3f       	cpi	r25, 0xFF	; 255
    1118:	30 f0       	brcs	.+12     	; 0x1126 <__ftoa_engine+0x38>
    111a:	80 38       	cpi	r24, 0x80	; 128
    111c:	71 05       	cpc	r23, r1
    111e:	61 05       	cpc	r22, r1
    1120:	09 f0       	breq	.+2      	; 0x1124 <__ftoa_engine+0x36>
    1122:	3c 5f       	subi	r19, 0xFC	; 252
    1124:	3c 5f       	subi	r19, 0xFC	; 252
    1126:	3d 93       	st	X+, r19
    1128:	91 30       	cpi	r25, 0x01	; 1
    112a:	08 f0       	brcs	.+2      	; 0x112e <__ftoa_engine+0x40>
    112c:	80 68       	ori	r24, 0x80	; 128
    112e:	91 1d       	adc	r25, r1
    1130:	df 93       	push	r29
    1132:	cf 93       	push	r28
    1134:	1f 93       	push	r17
    1136:	0f 93       	push	r16
    1138:	ff 92       	push	r15
    113a:	ef 92       	push	r14
    113c:	19 2f       	mov	r17, r25
    113e:	98 7f       	andi	r25, 0xF8	; 248
    1140:	96 95       	lsr	r25
    1142:	e9 2f       	mov	r30, r25
    1144:	96 95       	lsr	r25
    1146:	96 95       	lsr	r25
    1148:	e9 0f       	add	r30, r25
    114a:	ff 27       	eor	r31, r31
    114c:	e2 55       	subi	r30, 0x52	; 82
    114e:	ff 4f       	sbci	r31, 0xFF	; 255
    1150:	99 27       	eor	r25, r25
    1152:	33 27       	eor	r19, r19
    1154:	ee 24       	eor	r14, r14
    1156:	ff 24       	eor	r15, r15
    1158:	a7 01       	movw	r20, r14
    115a:	e7 01       	movw	r28, r14
    115c:	05 90       	lpm	r0, Z+
    115e:	08 94       	sec
    1160:	07 94       	ror	r0
    1162:	28 f4       	brcc	.+10     	; 0x116e <__ftoa_engine+0x80>
    1164:	36 0f       	add	r19, r22
    1166:	e7 1e       	adc	r14, r23
    1168:	f8 1e       	adc	r15, r24
    116a:	49 1f       	adc	r20, r25
    116c:	51 1d       	adc	r21, r1
    116e:	66 0f       	add	r22, r22
    1170:	77 1f       	adc	r23, r23
    1172:	88 1f       	adc	r24, r24
    1174:	99 1f       	adc	r25, r25
    1176:	06 94       	lsr	r0
    1178:	a1 f7       	brne	.-24     	; 0x1162 <__ftoa_engine+0x74>
    117a:	05 90       	lpm	r0, Z+
    117c:	07 94       	ror	r0
    117e:	28 f4       	brcc	.+10     	; 0x118a <__ftoa_engine+0x9c>
    1180:	e7 0e       	add	r14, r23
    1182:	f8 1e       	adc	r15, r24
    1184:	49 1f       	adc	r20, r25
    1186:	56 1f       	adc	r21, r22
    1188:	c1 1d       	adc	r28, r1
    118a:	77 0f       	add	r23, r23
    118c:	88 1f       	adc	r24, r24
    118e:	99 1f       	adc	r25, r25
    1190:	66 1f       	adc	r22, r22
    1192:	06 94       	lsr	r0
    1194:	a1 f7       	brne	.-24     	; 0x117e <__ftoa_engine+0x90>
    1196:	05 90       	lpm	r0, Z+
    1198:	07 94       	ror	r0
    119a:	28 f4       	brcc	.+10     	; 0x11a6 <__ftoa_engine+0xb8>
    119c:	f8 0e       	add	r15, r24
    119e:	49 1f       	adc	r20, r25
    11a0:	56 1f       	adc	r21, r22
    11a2:	c7 1f       	adc	r28, r23
    11a4:	d1 1d       	adc	r29, r1
    11a6:	88 0f       	add	r24, r24
    11a8:	99 1f       	adc	r25, r25
    11aa:	66 1f       	adc	r22, r22
    11ac:	77 1f       	adc	r23, r23
    11ae:	06 94       	lsr	r0
    11b0:	a1 f7       	brne	.-24     	; 0x119a <__ftoa_engine+0xac>
    11b2:	05 90       	lpm	r0, Z+
    11b4:	07 94       	ror	r0
    11b6:	20 f4       	brcc	.+8      	; 0x11c0 <__ftoa_engine+0xd2>
    11b8:	49 0f       	add	r20, r25
    11ba:	56 1f       	adc	r21, r22
    11bc:	c7 1f       	adc	r28, r23
    11be:	d8 1f       	adc	r29, r24
    11c0:	99 0f       	add	r25, r25
    11c2:	66 1f       	adc	r22, r22
    11c4:	77 1f       	adc	r23, r23
    11c6:	88 1f       	adc	r24, r24
    11c8:	06 94       	lsr	r0
    11ca:	a9 f7       	brne	.-22     	; 0x11b6 <__ftoa_engine+0xc8>
    11cc:	84 91       	lpm	r24, Z
    11ce:	10 95       	com	r17
    11d0:	17 70       	andi	r17, 0x07	; 7
    11d2:	41 f0       	breq	.+16     	; 0x11e4 <__ftoa_engine+0xf6>
    11d4:	d6 95       	lsr	r29
    11d6:	c7 95       	ror	r28
    11d8:	57 95       	ror	r21
    11da:	47 95       	ror	r20
    11dc:	f7 94       	ror	r15
    11de:	e7 94       	ror	r14
    11e0:	1a 95       	dec	r17
    11e2:	c1 f7       	brne	.-16     	; 0x11d4 <__ftoa_engine+0xe6>
    11e4:	e4 e5       	ldi	r30, 0x54	; 84
    11e6:	f0 e0       	ldi	r31, 0x00	; 0
    11e8:	68 94       	set
    11ea:	15 90       	lpm	r1, Z+
    11ec:	15 91       	lpm	r17, Z+
    11ee:	35 91       	lpm	r19, Z+
    11f0:	65 91       	lpm	r22, Z+
    11f2:	95 91       	lpm	r25, Z+
    11f4:	05 90       	lpm	r0, Z+
    11f6:	7f e2       	ldi	r23, 0x2F	; 47
    11f8:	73 95       	inc	r23
    11fa:	e1 18       	sub	r14, r1
    11fc:	f1 0a       	sbc	r15, r17
    11fe:	43 0b       	sbc	r20, r19
    1200:	56 0b       	sbc	r21, r22
    1202:	c9 0b       	sbc	r28, r25
    1204:	d0 09       	sbc	r29, r0
    1206:	c0 f7       	brcc	.-16     	; 0x11f8 <__ftoa_engine+0x10a>
    1208:	e1 0c       	add	r14, r1
    120a:	f1 1e       	adc	r15, r17
    120c:	43 1f       	adc	r20, r19
    120e:	56 1f       	adc	r21, r22
    1210:	c9 1f       	adc	r28, r25
    1212:	d0 1d       	adc	r29, r0
    1214:	7e f4       	brtc	.+30     	; 0x1234 <__ftoa_engine+0x146>
    1216:	70 33       	cpi	r23, 0x30	; 48
    1218:	11 f4       	brne	.+4      	; 0x121e <__ftoa_engine+0x130>
    121a:	8a 95       	dec	r24
    121c:	e6 cf       	rjmp	.-52     	; 0x11ea <__ftoa_engine+0xfc>
    121e:	e8 94       	clt
    1220:	01 50       	subi	r16, 0x01	; 1
    1222:	30 f0       	brcs	.+12     	; 0x1230 <__ftoa_engine+0x142>
    1224:	08 0f       	add	r16, r24
    1226:	0a f4       	brpl	.+2      	; 0x122a <__ftoa_engine+0x13c>
    1228:	00 27       	eor	r16, r16
    122a:	02 17       	cp	r16, r18
    122c:	08 f4       	brcc	.+2      	; 0x1230 <__ftoa_engine+0x142>
    122e:	20 2f       	mov	r18, r16
    1230:	23 95       	inc	r18
    1232:	02 2f       	mov	r16, r18
    1234:	7a 33       	cpi	r23, 0x3A	; 58
    1236:	28 f0       	brcs	.+10     	; 0x1242 <__ftoa_engine+0x154>
    1238:	79 e3       	ldi	r23, 0x39	; 57
    123a:	7d 93       	st	X+, r23
    123c:	2a 95       	dec	r18
    123e:	e9 f7       	brne	.-6      	; 0x123a <__ftoa_engine+0x14c>
    1240:	10 c0       	rjmp	.+32     	; 0x1262 <__ftoa_engine+0x174>
    1242:	7d 93       	st	X+, r23
    1244:	2a 95       	dec	r18
    1246:	89 f6       	brne	.-94     	; 0x11ea <__ftoa_engine+0xfc>
    1248:	06 94       	lsr	r0
    124a:	97 95       	ror	r25
    124c:	67 95       	ror	r22
    124e:	37 95       	ror	r19
    1250:	17 95       	ror	r17
    1252:	17 94       	ror	r1
    1254:	e1 18       	sub	r14, r1
    1256:	f1 0a       	sbc	r15, r17
    1258:	43 0b       	sbc	r20, r19
    125a:	56 0b       	sbc	r21, r22
    125c:	c9 0b       	sbc	r28, r25
    125e:	d0 09       	sbc	r29, r0
    1260:	98 f0       	brcs	.+38     	; 0x1288 <__ftoa_engine+0x19a>
    1262:	23 95       	inc	r18
    1264:	7e 91       	ld	r23, -X
    1266:	73 95       	inc	r23
    1268:	7a 33       	cpi	r23, 0x3A	; 58
    126a:	08 f0       	brcs	.+2      	; 0x126e <__ftoa_engine+0x180>
    126c:	70 e3       	ldi	r23, 0x30	; 48
    126e:	7c 93       	st	X, r23
    1270:	20 13       	cpse	r18, r16
    1272:	b8 f7       	brcc	.-18     	; 0x1262 <__ftoa_engine+0x174>
    1274:	7e 91       	ld	r23, -X
    1276:	70 61       	ori	r23, 0x10	; 16
    1278:	7d 93       	st	X+, r23
    127a:	30 f0       	brcs	.+12     	; 0x1288 <__ftoa_engine+0x19a>
    127c:	83 95       	inc	r24
    127e:	71 e3       	ldi	r23, 0x31	; 49
    1280:	7d 93       	st	X+, r23
    1282:	70 e3       	ldi	r23, 0x30	; 48
    1284:	2a 95       	dec	r18
    1286:	e1 f7       	brne	.-8      	; 0x1280 <__ftoa_engine+0x192>
    1288:	11 24       	eor	r1, r1
    128a:	ef 90       	pop	r14
    128c:	ff 90       	pop	r15
    128e:	0f 91       	pop	r16
    1290:	1f 91       	pop	r17
    1292:	cf 91       	pop	r28
    1294:	df 91       	pop	r29
    1296:	99 27       	eor	r25, r25
    1298:	87 fd       	sbrc	r24, 7
    129a:	90 95       	com	r25
    129c:	08 95       	ret

0000129e <strnlen_P>:
    129e:	fc 01       	movw	r30, r24
    12a0:	05 90       	lpm	r0, Z+
    12a2:	61 50       	subi	r22, 0x01	; 1
    12a4:	70 40       	sbci	r23, 0x00	; 0
    12a6:	01 10       	cpse	r0, r1
    12a8:	d8 f7       	brcc	.-10     	; 0x12a0 <strnlen_P+0x2>
    12aa:	80 95       	com	r24
    12ac:	90 95       	com	r25
    12ae:	8e 0f       	add	r24, r30
    12b0:	9f 1f       	adc	r25, r31
    12b2:	08 95       	ret

000012b4 <strnlen>:
    12b4:	fc 01       	movw	r30, r24
    12b6:	61 50       	subi	r22, 0x01	; 1
    12b8:	70 40       	sbci	r23, 0x00	; 0
    12ba:	01 90       	ld	r0, Z+
    12bc:	01 10       	cpse	r0, r1
    12be:	d8 f7       	brcc	.-10     	; 0x12b6 <strnlen+0x2>
    12c0:	80 95       	com	r24
    12c2:	90 95       	com	r25
    12c4:	8e 0f       	add	r24, r30
    12c6:	9f 1f       	adc	r25, r31
    12c8:	08 95       	ret

000012ca <fputc>:
    12ca:	0f 93       	push	r16
    12cc:	1f 93       	push	r17
    12ce:	cf 93       	push	r28
    12d0:	df 93       	push	r29
    12d2:	fb 01       	movw	r30, r22
    12d4:	23 81       	ldd	r18, Z+3	; 0x03
    12d6:	21 fd       	sbrc	r18, 1
    12d8:	03 c0       	rjmp	.+6      	; 0x12e0 <fputc+0x16>
    12da:	8f ef       	ldi	r24, 0xFF	; 255
    12dc:	9f ef       	ldi	r25, 0xFF	; 255
    12de:	2c c0       	rjmp	.+88     	; 0x1338 <fputc+0x6e>
    12e0:	22 ff       	sbrs	r18, 2
    12e2:	16 c0       	rjmp	.+44     	; 0x1310 <fputc+0x46>
    12e4:	46 81       	ldd	r20, Z+6	; 0x06
    12e6:	57 81       	ldd	r21, Z+7	; 0x07
    12e8:	24 81       	ldd	r18, Z+4	; 0x04
    12ea:	35 81       	ldd	r19, Z+5	; 0x05
    12ec:	42 17       	cp	r20, r18
    12ee:	53 07       	cpc	r21, r19
    12f0:	44 f4       	brge	.+16     	; 0x1302 <fputc+0x38>
    12f2:	a0 81       	ld	r26, Z
    12f4:	b1 81       	ldd	r27, Z+1	; 0x01
    12f6:	9d 01       	movw	r18, r26
    12f8:	2f 5f       	subi	r18, 0xFF	; 255
    12fa:	3f 4f       	sbci	r19, 0xFF	; 255
    12fc:	31 83       	std	Z+1, r19	; 0x01
    12fe:	20 83       	st	Z, r18
    1300:	8c 93       	st	X, r24
    1302:	26 81       	ldd	r18, Z+6	; 0x06
    1304:	37 81       	ldd	r19, Z+7	; 0x07
    1306:	2f 5f       	subi	r18, 0xFF	; 255
    1308:	3f 4f       	sbci	r19, 0xFF	; 255
    130a:	37 83       	std	Z+7, r19	; 0x07
    130c:	26 83       	std	Z+6, r18	; 0x06
    130e:	14 c0       	rjmp	.+40     	; 0x1338 <fputc+0x6e>
    1310:	8b 01       	movw	r16, r22
    1312:	ec 01       	movw	r28, r24
    1314:	fb 01       	movw	r30, r22
    1316:	00 84       	ldd	r0, Z+8	; 0x08
    1318:	f1 85       	ldd	r31, Z+9	; 0x09
    131a:	e0 2d       	mov	r30, r0
    131c:	09 95       	icall
    131e:	89 2b       	or	r24, r25
    1320:	e1 f6       	brne	.-72     	; 0x12da <fputc+0x10>
    1322:	d8 01       	movw	r26, r16
    1324:	16 96       	adiw	r26, 0x06	; 6
    1326:	8d 91       	ld	r24, X+
    1328:	9c 91       	ld	r25, X
    132a:	17 97       	sbiw	r26, 0x07	; 7
    132c:	01 96       	adiw	r24, 0x01	; 1
    132e:	17 96       	adiw	r26, 0x07	; 7
    1330:	9c 93       	st	X, r25
    1332:	8e 93       	st	-X, r24
    1334:	16 97       	sbiw	r26, 0x06	; 6
    1336:	ce 01       	movw	r24, r28
    1338:	df 91       	pop	r29
    133a:	cf 91       	pop	r28
    133c:	1f 91       	pop	r17
    133e:	0f 91       	pop	r16
    1340:	08 95       	ret

00001342 <__ultoa_invert>:
    1342:	fa 01       	movw	r30, r20
    1344:	aa 27       	eor	r26, r26
    1346:	28 30       	cpi	r18, 0x08	; 8
    1348:	51 f1       	breq	.+84     	; 0x139e <__ultoa_invert+0x5c>
    134a:	20 31       	cpi	r18, 0x10	; 16
    134c:	81 f1       	breq	.+96     	; 0x13ae <__ultoa_invert+0x6c>
    134e:	e8 94       	clt
    1350:	6f 93       	push	r22
    1352:	6e 7f       	andi	r22, 0xFE	; 254
    1354:	6e 5f       	subi	r22, 0xFE	; 254
    1356:	7f 4f       	sbci	r23, 0xFF	; 255
    1358:	8f 4f       	sbci	r24, 0xFF	; 255
    135a:	9f 4f       	sbci	r25, 0xFF	; 255
    135c:	af 4f       	sbci	r26, 0xFF	; 255
    135e:	b1 e0       	ldi	r27, 0x01	; 1
    1360:	3e d0       	rcall	.+124    	; 0x13de <__ultoa_invert+0x9c>
    1362:	b4 e0       	ldi	r27, 0x04	; 4
    1364:	3c d0       	rcall	.+120    	; 0x13de <__ultoa_invert+0x9c>
    1366:	67 0f       	add	r22, r23
    1368:	78 1f       	adc	r23, r24
    136a:	89 1f       	adc	r24, r25
    136c:	9a 1f       	adc	r25, r26
    136e:	a1 1d       	adc	r26, r1
    1370:	68 0f       	add	r22, r24
    1372:	79 1f       	adc	r23, r25
    1374:	8a 1f       	adc	r24, r26
    1376:	91 1d       	adc	r25, r1
    1378:	a1 1d       	adc	r26, r1
    137a:	6a 0f       	add	r22, r26
    137c:	71 1d       	adc	r23, r1
    137e:	81 1d       	adc	r24, r1
    1380:	91 1d       	adc	r25, r1
    1382:	a1 1d       	adc	r26, r1
    1384:	20 d0       	rcall	.+64     	; 0x13c6 <__ultoa_invert+0x84>
    1386:	09 f4       	brne	.+2      	; 0x138a <__ultoa_invert+0x48>
    1388:	68 94       	set
    138a:	3f 91       	pop	r19
    138c:	2a e0       	ldi	r18, 0x0A	; 10
    138e:	26 9f       	mul	r18, r22
    1390:	11 24       	eor	r1, r1
    1392:	30 19       	sub	r19, r0
    1394:	30 5d       	subi	r19, 0xD0	; 208
    1396:	31 93       	st	Z+, r19
    1398:	de f6       	brtc	.-74     	; 0x1350 <__ultoa_invert+0xe>
    139a:	cf 01       	movw	r24, r30
    139c:	08 95       	ret
    139e:	46 2f       	mov	r20, r22
    13a0:	47 70       	andi	r20, 0x07	; 7
    13a2:	40 5d       	subi	r20, 0xD0	; 208
    13a4:	41 93       	st	Z+, r20
    13a6:	b3 e0       	ldi	r27, 0x03	; 3
    13a8:	0f d0       	rcall	.+30     	; 0x13c8 <__ultoa_invert+0x86>
    13aa:	c9 f7       	brne	.-14     	; 0x139e <__ultoa_invert+0x5c>
    13ac:	f6 cf       	rjmp	.-20     	; 0x139a <__ultoa_invert+0x58>
    13ae:	46 2f       	mov	r20, r22
    13b0:	4f 70       	andi	r20, 0x0F	; 15
    13b2:	40 5d       	subi	r20, 0xD0	; 208
    13b4:	4a 33       	cpi	r20, 0x3A	; 58
    13b6:	18 f0       	brcs	.+6      	; 0x13be <__ultoa_invert+0x7c>
    13b8:	49 5d       	subi	r20, 0xD9	; 217
    13ba:	31 fd       	sbrc	r19, 1
    13bc:	40 52       	subi	r20, 0x20	; 32
    13be:	41 93       	st	Z+, r20
    13c0:	02 d0       	rcall	.+4      	; 0x13c6 <__ultoa_invert+0x84>
    13c2:	a9 f7       	brne	.-22     	; 0x13ae <__ultoa_invert+0x6c>
    13c4:	ea cf       	rjmp	.-44     	; 0x139a <__ultoa_invert+0x58>
    13c6:	b4 e0       	ldi	r27, 0x04	; 4
    13c8:	a6 95       	lsr	r26
    13ca:	97 95       	ror	r25
    13cc:	87 95       	ror	r24
    13ce:	77 95       	ror	r23
    13d0:	67 95       	ror	r22
    13d2:	ba 95       	dec	r27
    13d4:	c9 f7       	brne	.-14     	; 0x13c8 <__ultoa_invert+0x86>
    13d6:	00 97       	sbiw	r24, 0x00	; 0
    13d8:	61 05       	cpc	r22, r1
    13da:	71 05       	cpc	r23, r1
    13dc:	08 95       	ret
    13de:	9b 01       	movw	r18, r22
    13e0:	ac 01       	movw	r20, r24
    13e2:	0a 2e       	mov	r0, r26
    13e4:	06 94       	lsr	r0
    13e6:	57 95       	ror	r21
    13e8:	47 95       	ror	r20
    13ea:	37 95       	ror	r19
    13ec:	27 95       	ror	r18
    13ee:	ba 95       	dec	r27
    13f0:	c9 f7       	brne	.-14     	; 0x13e4 <__ultoa_invert+0xa2>
    13f2:	62 0f       	add	r22, r18
    13f4:	73 1f       	adc	r23, r19
    13f6:	84 1f       	adc	r24, r20
    13f8:	95 1f       	adc	r25, r21
    13fa:	a0 1d       	adc	r26, r0
    13fc:	08 95       	ret

000013fe <__divmodsi4>:
    13fe:	05 2e       	mov	r0, r21
    1400:	97 fb       	bst	r25, 7
    1402:	1e f4       	brtc	.+6      	; 0x140a <__divmodsi4+0xc>
    1404:	00 94       	com	r0
    1406:	0e 94 16 0a 	call	0x142c	; 0x142c <__negsi2>
    140a:	57 fd       	sbrc	r21, 7
    140c:	07 d0       	rcall	.+14     	; 0x141c <__divmodsi4_neg2>
    140e:	0e 94 68 0a 	call	0x14d0	; 0x14d0 <__udivmodsi4>
    1412:	07 fc       	sbrc	r0, 7
    1414:	03 d0       	rcall	.+6      	; 0x141c <__divmodsi4_neg2>
    1416:	4e f4       	brtc	.+18     	; 0x142a <__divmodsi4_exit>
    1418:	0c 94 16 0a 	jmp	0x142c	; 0x142c <__negsi2>

0000141c <__divmodsi4_neg2>:
    141c:	50 95       	com	r21
    141e:	40 95       	com	r20
    1420:	30 95       	com	r19
    1422:	21 95       	neg	r18
    1424:	3f 4f       	sbci	r19, 0xFF	; 255
    1426:	4f 4f       	sbci	r20, 0xFF	; 255
    1428:	5f 4f       	sbci	r21, 0xFF	; 255

0000142a <__divmodsi4_exit>:
    142a:	08 95       	ret

0000142c <__negsi2>:
    142c:	90 95       	com	r25
    142e:	80 95       	com	r24
    1430:	70 95       	com	r23
    1432:	61 95       	neg	r22
    1434:	7f 4f       	sbci	r23, 0xFF	; 255
    1436:	8f 4f       	sbci	r24, 0xFF	; 255
    1438:	9f 4f       	sbci	r25, 0xFF	; 255
    143a:	08 95       	ret

0000143c <__muluhisi3>:
    143c:	0e 94 8a 0a 	call	0x1514	; 0x1514 <__umulhisi3>
    1440:	a5 9f       	mul	r26, r21
    1442:	90 0d       	add	r25, r0
    1444:	b4 9f       	mul	r27, r20
    1446:	90 0d       	add	r25, r0
    1448:	a4 9f       	mul	r26, r20
    144a:	80 0d       	add	r24, r0
    144c:	91 1d       	adc	r25, r1
    144e:	11 24       	eor	r1, r1
    1450:	08 95       	ret

00001452 <__mulshisi3>:
    1452:	b7 ff       	sbrs	r27, 7
    1454:	0c 94 1e 0a 	jmp	0x143c	; 0x143c <__muluhisi3>

00001458 <__mulohisi3>:
    1458:	0e 94 1e 0a 	call	0x143c	; 0x143c <__muluhisi3>
    145c:	82 1b       	sub	r24, r18
    145e:	93 0b       	sbc	r25, r19
    1460:	08 95       	ret

00001462 <__prologue_saves__>:
    1462:	2f 92       	push	r2
    1464:	3f 92       	push	r3
    1466:	4f 92       	push	r4
    1468:	5f 92       	push	r5
    146a:	6f 92       	push	r6
    146c:	7f 92       	push	r7
    146e:	8f 92       	push	r8
    1470:	9f 92       	push	r9
    1472:	af 92       	push	r10
    1474:	bf 92       	push	r11
    1476:	cf 92       	push	r12
    1478:	df 92       	push	r13
    147a:	ef 92       	push	r14
    147c:	ff 92       	push	r15
    147e:	0f 93       	push	r16
    1480:	1f 93       	push	r17
    1482:	cf 93       	push	r28
    1484:	df 93       	push	r29
    1486:	cd b7       	in	r28, 0x3d	; 61
    1488:	de b7       	in	r29, 0x3e	; 62
    148a:	ca 1b       	sub	r28, r26
    148c:	db 0b       	sbc	r29, r27
    148e:	0f b6       	in	r0, 0x3f	; 63
    1490:	f8 94       	cli
    1492:	de bf       	out	0x3e, r29	; 62
    1494:	0f be       	out	0x3f, r0	; 63
    1496:	cd bf       	out	0x3d, r28	; 61
    1498:	09 94       	ijmp

0000149a <__epilogue_restores__>:
    149a:	2a 88       	ldd	r2, Y+18	; 0x12
    149c:	39 88       	ldd	r3, Y+17	; 0x11
    149e:	48 88       	ldd	r4, Y+16	; 0x10
    14a0:	5f 84       	ldd	r5, Y+15	; 0x0f
    14a2:	6e 84       	ldd	r6, Y+14	; 0x0e
    14a4:	7d 84       	ldd	r7, Y+13	; 0x0d
    14a6:	8c 84       	ldd	r8, Y+12	; 0x0c
    14a8:	9b 84       	ldd	r9, Y+11	; 0x0b
    14aa:	aa 84       	ldd	r10, Y+10	; 0x0a
    14ac:	b9 84       	ldd	r11, Y+9	; 0x09
    14ae:	c8 84       	ldd	r12, Y+8	; 0x08
    14b0:	df 80       	ldd	r13, Y+7	; 0x07
    14b2:	ee 80       	ldd	r14, Y+6	; 0x06
    14b4:	fd 80       	ldd	r15, Y+5	; 0x05
    14b6:	0c 81       	ldd	r16, Y+4	; 0x04
    14b8:	1b 81       	ldd	r17, Y+3	; 0x03
    14ba:	aa 81       	ldd	r26, Y+2	; 0x02
    14bc:	b9 81       	ldd	r27, Y+1	; 0x01
    14be:	ce 0f       	add	r28, r30
    14c0:	d1 1d       	adc	r29, r1
    14c2:	0f b6       	in	r0, 0x3f	; 63
    14c4:	f8 94       	cli
    14c6:	de bf       	out	0x3e, r29	; 62
    14c8:	0f be       	out	0x3f, r0	; 63
    14ca:	cd bf       	out	0x3d, r28	; 61
    14cc:	ed 01       	movw	r28, r26
    14ce:	08 95       	ret

000014d0 <__udivmodsi4>:
    14d0:	a1 e2       	ldi	r26, 0x21	; 33
    14d2:	1a 2e       	mov	r1, r26
    14d4:	aa 1b       	sub	r26, r26
    14d6:	bb 1b       	sub	r27, r27
    14d8:	fd 01       	movw	r30, r26
    14da:	0d c0       	rjmp	.+26     	; 0x14f6 <__udivmodsi4_ep>

000014dc <__udivmodsi4_loop>:
    14dc:	aa 1f       	adc	r26, r26
    14de:	bb 1f       	adc	r27, r27
    14e0:	ee 1f       	adc	r30, r30
    14e2:	ff 1f       	adc	r31, r31
    14e4:	a2 17       	cp	r26, r18
    14e6:	b3 07       	cpc	r27, r19
    14e8:	e4 07       	cpc	r30, r20
    14ea:	f5 07       	cpc	r31, r21
    14ec:	20 f0       	brcs	.+8      	; 0x14f6 <__udivmodsi4_ep>
    14ee:	a2 1b       	sub	r26, r18
    14f0:	b3 0b       	sbc	r27, r19
    14f2:	e4 0b       	sbc	r30, r20
    14f4:	f5 0b       	sbc	r31, r21

000014f6 <__udivmodsi4_ep>:
    14f6:	66 1f       	adc	r22, r22
    14f8:	77 1f       	adc	r23, r23
    14fa:	88 1f       	adc	r24, r24
    14fc:	99 1f       	adc	r25, r25
    14fe:	1a 94       	dec	r1
    1500:	69 f7       	brne	.-38     	; 0x14dc <__udivmodsi4_loop>
    1502:	60 95       	com	r22
    1504:	70 95       	com	r23
    1506:	80 95       	com	r24
    1508:	90 95       	com	r25
    150a:	9b 01       	movw	r18, r22
    150c:	ac 01       	movw	r20, r24
    150e:	bd 01       	movw	r22, r26
    1510:	cf 01       	movw	r24, r30
    1512:	08 95       	ret

00001514 <__umulhisi3>:
    1514:	a2 9f       	mul	r26, r18
    1516:	b0 01       	movw	r22, r0
    1518:	b3 9f       	mul	r27, r19
    151a:	c0 01       	movw	r24, r0
    151c:	a3 9f       	mul	r26, r19
    151e:	70 0d       	add	r23, r0
    1520:	81 1d       	adc	r24, r1
    1522:	11 24       	eor	r1, r1
    1524:	91 1d       	adc	r25, r1
    1526:	b2 9f       	mul	r27, r18
    1528:	70 0d       	add	r23, r0
    152a:	81 1d       	adc	r24, r1
    152c:	11 24       	eor	r1, r1
    152e:	91 1d       	adc	r25, r1
    1530:	08 95       	ret

00001532 <_exit>:
    1532:	f8 94       	cli

00001534 <__stop_program>:
    1534:	ff cf       	rjmp	.-2      	; 0x1534 <__stop_program>
