
Project5_Music.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000494  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000508  00800060  00000494  00000508  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000a10  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a40  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000050  00000000  00000000  00000a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c3a  00000000  00000000  00000acc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000666  00000000  00000000  00001706  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000372  00000000  00000000  00001d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b8  00000000  00000000  000020e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a2  00000000  00000000  00002198  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000209  00000000  00000000  0000253a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00002743  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	15 e0       	ldi	r17, 0x05	; 5
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e9       	ldi	r30, 0x94	; 148
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 36       	cpi	r26, 0x68	; 104
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 ae 00 	call	0x15c	; 0x15c <main>
  7a:	0c 94 48 02 	jmp	0x490	; 0x490 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <wait_avr>:
  WDTCR = 15;
}

void
wait_avr(unsigned short msec)
{
  82:	9c 01       	movw	r18, r24
  TCCR0 = 1;
  84:	81 e0       	ldi	r24, 0x01	; 1
  86:	83 bf       	out	0x33, r24	; 51
  while (msec--) {
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 1) * 0.000001);
  88:	88 ef       	ldi	r24, 0xF8	; 248

void
wait_avr(unsigned short msec)
{
  TCCR0 = 1;
  while (msec--) {
  8a:	08 c0       	rjmp	.+16     	; 0x9c <wait_avr+0x1a>
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 1) * 0.000001);
  8c:	82 bf       	out	0x32, r24	; 50
    SET_BIT(TIFR, TOV0);
  8e:	98 b7       	in	r25, 0x38	; 56
  90:	91 60       	ori	r25, 0x01	; 1
  92:	98 bf       	out	0x38, r25	; 56
    WDR();
  94:	a8 95       	wdr
    while (!GET_BIT(TIFR, TOV0));
  96:	08 b6       	in	r0, 0x38	; 56
  98:	00 fe       	sbrs	r0, 0
  9a:	fd cf       	rjmp	.-6      	; 0x96 <wait_avr+0x14>

void
wait_avr(unsigned short msec)
{
  TCCR0 = 1;
  while (msec--) {
  9c:	21 50       	subi	r18, 0x01	; 1
  9e:	31 09       	sbc	r19, r1
  a0:	a8 f7       	brcc	.-22     	; 0x8c <wait_avr+0xa>
    TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 1) * 0.000001);
    SET_BIT(TIFR, TOV0);
    WDR();
    while (!GET_BIT(TIFR, TOV0));
  }
  TCCR0 = 0;
  a2:	13 be       	out	0x33, r1	; 51
  a4:	08 95       	ret

000000a6 <play_note>:
struct note{
	float freq, duration;
};


void play_note(float freq, float duration){
  a6:	4f 92       	push	r4
  a8:	5f 92       	push	r5
  aa:	6f 92       	push	r6
  ac:	7f 92       	push	r7
  ae:	8f 92       	push	r8
  b0:	9f 92       	push	r9
  b2:	af 92       	push	r10
  b4:	bf 92       	push	r11
  b6:	cf 92       	push	r12
  b8:	df 92       	push	r13
  ba:	ef 92       	push	r14
  bc:	ff 92       	push	r15
  be:	0f 93       	push	r16
  c0:	1f 93       	push	r17
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	29 01       	movw	r4, r18
  c8:	3a 01       	movw	r6, r20
	
	float period = 1/freq;
  ca:	9b 01       	movw	r18, r22
  cc:	ac 01       	movw	r20, r24
  ce:	60 e0       	ldi	r22, 0x00	; 0
  d0:	70 e0       	ldi	r23, 0x00	; 0
  d2:	80 e8       	ldi	r24, 0x80	; 128
  d4:	9f e3       	ldi	r25, 0x3F	; 63
  d6:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <__divsf3>
  da:	6b 01       	movw	r12, r22
  dc:	7c 01       	movw	r14, r24
	
	float Thigh = (period/2) * 1000000;
  de:	20 e0       	ldi	r18, 0x00	; 0
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	40 e0       	ldi	r20, 0x00	; 0
  e4:	5f e3       	ldi	r21, 0x3F	; 63
  e6:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__mulsf3>
  ea:	20 e0       	ldi	r18, 0x00	; 0
  ec:	34 e2       	ldi	r19, 0x24	; 36
  ee:	44 e7       	ldi	r20, 0x74	; 116
  f0:	59 e4       	ldi	r21, 0x49	; 73
  f2:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__mulsf3>
  f6:	4b 01       	movw	r8, r22
  f8:	5c 01       	movw	r10, r24
	
	int K = duration/(period);
  fa:	a7 01       	movw	r20, r14
  fc:	96 01       	movw	r18, r12
  fe:	c3 01       	movw	r24, r6
 100:	b2 01       	movw	r22, r4
 102:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <__divsf3>
 106:	0e 94 54 01 	call	0x2a8	; 0x2a8 <__fixsfsi>
 10a:	8b 01       	movw	r16, r22
	
	for (int i = 0; i < K; i++){
 10c:	16 16       	cp	r1, r22
 10e:	17 06       	cpc	r1, r23
 110:	a4 f4       	brge	.+40     	; 0x13a <play_note+0x94>
 112:	c0 e0       	ldi	r28, 0x00	; 0
 114:	d0 e0       	ldi	r29, 0x00	; 0
		// fuse Ext. Crystal/Resonator High Freq: start-up time 16kck + 64ms EXTHIFXTXLES 16CK_64ms
		PORTB |= 0b00000001;
 116:	c0 9a       	sbi	0x18, 0	; 24
		wait_avr(Thigh);
 118:	c5 01       	movw	r24, r10
 11a:	b4 01       	movw	r22, r8
 11c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <__fixunssfsi>
 120:	6b 01       	movw	r12, r22
 122:	7c 01       	movw	r14, r24
 124:	cb 01       	movw	r24, r22
 126:	0e 94 41 00 	call	0x82	; 0x82 <wait_avr>
		PORTB &= 0b11111110;
 12a:	c0 98       	cbi	0x18, 0	; 24
		wait_avr(Thigh);
 12c:	c6 01       	movw	r24, r12
 12e:	0e 94 41 00 	call	0x82	; 0x82 <wait_avr>
	
	float Thigh = (period/2) * 1000000;
	
	int K = duration/(period);
	
	for (int i = 0; i < K; i++){
 132:	21 96       	adiw	r28, 0x01	; 1
 134:	0c 17       	cp	r16, r28
 136:	1d 07       	cpc	r17, r29
 138:	71 f7       	brne	.-36     	; 0x116 <play_note+0x70>
		PORTB |= 0b00000001;
		wait_avr(Thigh);
		PORTB &= 0b11111110;
		wait_avr(Thigh);
	}
}
 13a:	df 91       	pop	r29
 13c:	cf 91       	pop	r28
 13e:	1f 91       	pop	r17
 140:	0f 91       	pop	r16
 142:	ff 90       	pop	r15
 144:	ef 90       	pop	r14
 146:	df 90       	pop	r13
 148:	cf 90       	pop	r12
 14a:	bf 90       	pop	r11
 14c:	af 90       	pop	r10
 14e:	9f 90       	pop	r9
 150:	8f 90       	pop	r8
 152:	7f 90       	pop	r7
 154:	6f 90       	pop	r6
 156:	5f 90       	pop	r5
 158:	4f 90       	pop	r4
 15a:	08 95       	ret

0000015c <main>:
};


int main(void)
{
	MCUCSR = (1<<JTD);
 15c:	80 e8       	ldi	r24, 0x80	; 128
 15e:	84 bf       	out	0x34, r24	; 52
	MCUCSR = (1<<JTD);
 160:	84 bf       	out	0x34, r24	; 52
		
	// B0 output speaker
	// B1 input button
	// 0b 0000 0001
	DDRB = 0x01;
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	87 bb       	out	0x17, r24	; 23
	// B1 zero'd out
	PORTB &= 0b11111101;
 166:	c1 98       	cbi	0x18, 1	; 24
	
	// 0b 0000 0000 input
	DDRA = 0x01;
 168:	8a bb       	out	0x1a, r24	; 26
	PORTA &= 0b11111101;
 16a:	d9 98       	cbi	0x1b, 1	; 27
	
    while (1) 
    {

		if (GET_BIT(PINA, 1)){
			PORTA = 1;
 16c:	ff 24       	eor	r15, r15
 16e:	f3 94       	inc	r15
 170:	08 e6       	ldi	r16, 0x68	; 104
 172:	15 e0       	ldi	r17, 0x05	; 5
	PORTA &= 0b11111101;
	
    while (1) 
    {

		if (GET_BIT(PINA, 1)){
 174:	c9 9b       	sbis	0x19, 1	; 25
 176:	23 c0       	rjmp	.+70     	; 0x1be <main+0x62>
			PORTA = 1;
 178:	fb ba       	out	0x1b, r15	; 27
 17a:	c0 e6       	ldi	r28, 0x60	; 96
 17c:	d0 e0       	ldi	r29, 0x00	; 0
			for (int i = 0; i < 161; i++){
				play_note(victory[i].freq, victory[i].duration);
 17e:	2c 81       	ldd	r18, Y+4	; 0x04
 180:	3d 81       	ldd	r19, Y+5	; 0x05
 182:	4e 81       	ldd	r20, Y+6	; 0x06
 184:	5f 81       	ldd	r21, Y+7	; 0x07
 186:	68 81       	ld	r22, Y
 188:	79 81       	ldd	r23, Y+1	; 0x01
 18a:	8a 81       	ldd	r24, Y+2	; 0x02
 18c:	9b 81       	ldd	r25, Y+3	; 0x03
 18e:	0e 94 53 00 	call	0xa6	; 0xa6 <play_note>
 192:	28 96       	adiw	r28, 0x08	; 8
    while (1) 
    {

		if (GET_BIT(PINA, 1)){
			PORTA = 1;
			for (int i = 0; i < 161; i++){
 194:	c0 17       	cp	r28, r16
 196:	d1 07       	cpc	r29, r17
 198:	91 f7       	brne	.-28     	; 0x17e <main+0x22>
 19a:	c8 eb       	ldi	r28, 0xB8	; 184
 19c:	d0 e0       	ldi	r29, 0x00	; 0
				play_note(victory[i].freq, victory[i].duration);
			}
			for (int i = 11; i < 161; i++){
				play_note(victory[i].freq, victory[i].duration);
 19e:	2c 81       	ldd	r18, Y+4	; 0x04
 1a0:	3d 81       	ldd	r19, Y+5	; 0x05
 1a2:	4e 81       	ldd	r20, Y+6	; 0x06
 1a4:	5f 81       	ldd	r21, Y+7	; 0x07
 1a6:	68 81       	ld	r22, Y
 1a8:	79 81       	ldd	r23, Y+1	; 0x01
 1aa:	8a 81       	ldd	r24, Y+2	; 0x02
 1ac:	9b 81       	ldd	r25, Y+3	; 0x03
 1ae:	0e 94 53 00 	call	0xa6	; 0xa6 <play_note>
 1b2:	28 96       	adiw	r28, 0x08	; 8
		if (GET_BIT(PINA, 1)){
			PORTA = 1;
			for (int i = 0; i < 161; i++){
				play_note(victory[i].freq, victory[i].duration);
			}
			for (int i = 11; i < 161; i++){
 1b4:	c0 17       	cp	r28, r16
 1b6:	d1 07       	cpc	r29, r17
 1b8:	91 f7       	brne	.-28     	; 0x19e <main+0x42>
				play_note(victory[i].freq, victory[i].duration);
			}
			PORTA = 0;
 1ba:	1b ba       	out	0x1b, r1	; 27
 1bc:	db cf       	rjmp	.-74     	; 0x174 <main+0x18>
		}
		else{
			PORTB = 0;
 1be:	18 ba       	out	0x18, r1	; 24
			PORTA = 0;
 1c0:	1b ba       	out	0x1b, r1	; 27
 1c2:	d8 cf       	rjmp	.-80     	; 0x174 <main+0x18>

000001c4 <__divsf3>:
 1c4:	0e 94 f6 00 	call	0x1ec	; 0x1ec <__divsf3x>
 1c8:	0c 94 a1 01 	jmp	0x342	; 0x342 <__fp_round>
 1cc:	0e 94 9a 01 	call	0x334	; 0x334 <__fp_pscB>
 1d0:	58 f0       	brcs	.+22     	; 0x1e8 <__divsf3+0x24>
 1d2:	0e 94 93 01 	call	0x326	; 0x326 <__fp_pscA>
 1d6:	40 f0       	brcs	.+16     	; 0x1e8 <__divsf3+0x24>
 1d8:	29 f4       	brne	.+10     	; 0x1e4 <__divsf3+0x20>
 1da:	5f 3f       	cpi	r21, 0xFF	; 255
 1dc:	29 f0       	breq	.+10     	; 0x1e8 <__divsf3+0x24>
 1de:	0c 94 8a 01 	jmp	0x314	; 0x314 <__fp_inf>
 1e2:	51 11       	cpse	r21, r1
 1e4:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <__fp_szero>
 1e8:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_nan>

000001ec <__divsf3x>:
 1ec:	0e 94 b2 01 	call	0x364	; 0x364 <__fp_split3>
 1f0:	68 f3       	brcs	.-38     	; 0x1cc <__divsf3+0x8>

000001f2 <__divsf3_pse>:
 1f2:	99 23       	and	r25, r25
 1f4:	b1 f3       	breq	.-20     	; 0x1e2 <__divsf3+0x1e>
 1f6:	55 23       	and	r21, r21
 1f8:	91 f3       	breq	.-28     	; 0x1de <__divsf3+0x1a>
 1fa:	95 1b       	sub	r25, r21
 1fc:	55 0b       	sbc	r21, r21
 1fe:	bb 27       	eor	r27, r27
 200:	aa 27       	eor	r26, r26
 202:	62 17       	cp	r22, r18
 204:	73 07       	cpc	r23, r19
 206:	84 07       	cpc	r24, r20
 208:	38 f0       	brcs	.+14     	; 0x218 <__divsf3_pse+0x26>
 20a:	9f 5f       	subi	r25, 0xFF	; 255
 20c:	5f 4f       	sbci	r21, 0xFF	; 255
 20e:	22 0f       	add	r18, r18
 210:	33 1f       	adc	r19, r19
 212:	44 1f       	adc	r20, r20
 214:	aa 1f       	adc	r26, r26
 216:	a9 f3       	breq	.-22     	; 0x202 <__divsf3_pse+0x10>
 218:	35 d0       	rcall	.+106    	; 0x284 <__divsf3_pse+0x92>
 21a:	0e 2e       	mov	r0, r30
 21c:	3a f0       	brmi	.+14     	; 0x22c <__divsf3_pse+0x3a>
 21e:	e0 e8       	ldi	r30, 0x80	; 128
 220:	32 d0       	rcall	.+100    	; 0x286 <__divsf3_pse+0x94>
 222:	91 50       	subi	r25, 0x01	; 1
 224:	50 40       	sbci	r21, 0x00	; 0
 226:	e6 95       	lsr	r30
 228:	00 1c       	adc	r0, r0
 22a:	ca f7       	brpl	.-14     	; 0x21e <__divsf3_pse+0x2c>
 22c:	2b d0       	rcall	.+86     	; 0x284 <__divsf3_pse+0x92>
 22e:	fe 2f       	mov	r31, r30
 230:	29 d0       	rcall	.+82     	; 0x284 <__divsf3_pse+0x92>
 232:	66 0f       	add	r22, r22
 234:	77 1f       	adc	r23, r23
 236:	88 1f       	adc	r24, r24
 238:	bb 1f       	adc	r27, r27
 23a:	26 17       	cp	r18, r22
 23c:	37 07       	cpc	r19, r23
 23e:	48 07       	cpc	r20, r24
 240:	ab 07       	cpc	r26, r27
 242:	b0 e8       	ldi	r27, 0x80	; 128
 244:	09 f0       	breq	.+2      	; 0x248 <__divsf3_pse+0x56>
 246:	bb 0b       	sbc	r27, r27
 248:	80 2d       	mov	r24, r0
 24a:	bf 01       	movw	r22, r30
 24c:	ff 27       	eor	r31, r31
 24e:	93 58       	subi	r25, 0x83	; 131
 250:	5f 4f       	sbci	r21, 0xFF	; 255
 252:	3a f0       	brmi	.+14     	; 0x262 <__divsf3_pse+0x70>
 254:	9e 3f       	cpi	r25, 0xFE	; 254
 256:	51 05       	cpc	r21, r1
 258:	78 f0       	brcs	.+30     	; 0x278 <__divsf3_pse+0x86>
 25a:	0c 94 8a 01 	jmp	0x314	; 0x314 <__fp_inf>
 25e:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <__fp_szero>
 262:	5f 3f       	cpi	r21, 0xFF	; 255
 264:	e4 f3       	brlt	.-8      	; 0x25e <__divsf3_pse+0x6c>
 266:	98 3e       	cpi	r25, 0xE8	; 232
 268:	d4 f3       	brlt	.-12     	; 0x25e <__divsf3_pse+0x6c>
 26a:	86 95       	lsr	r24
 26c:	77 95       	ror	r23
 26e:	67 95       	ror	r22
 270:	b7 95       	ror	r27
 272:	f7 95       	ror	r31
 274:	9f 5f       	subi	r25, 0xFF	; 255
 276:	c9 f7       	brne	.-14     	; 0x26a <__divsf3_pse+0x78>
 278:	88 0f       	add	r24, r24
 27a:	91 1d       	adc	r25, r1
 27c:	96 95       	lsr	r25
 27e:	87 95       	ror	r24
 280:	97 f9       	bld	r25, 7
 282:	08 95       	ret
 284:	e1 e0       	ldi	r30, 0x01	; 1
 286:	66 0f       	add	r22, r22
 288:	77 1f       	adc	r23, r23
 28a:	88 1f       	adc	r24, r24
 28c:	bb 1f       	adc	r27, r27
 28e:	62 17       	cp	r22, r18
 290:	73 07       	cpc	r23, r19
 292:	84 07       	cpc	r24, r20
 294:	ba 07       	cpc	r27, r26
 296:	20 f0       	brcs	.+8      	; 0x2a0 <__divsf3_pse+0xae>
 298:	62 1b       	sub	r22, r18
 29a:	73 0b       	sbc	r23, r19
 29c:	84 0b       	sbc	r24, r20
 29e:	ba 0b       	sbc	r27, r26
 2a0:	ee 1f       	adc	r30, r30
 2a2:	88 f7       	brcc	.-30     	; 0x286 <__divsf3_pse+0x94>
 2a4:	e0 95       	com	r30
 2a6:	08 95       	ret

000002a8 <__fixsfsi>:
 2a8:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <__fixunssfsi>
 2ac:	68 94       	set
 2ae:	b1 11       	cpse	r27, r1
 2b0:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <__fp_szero>
 2b4:	08 95       	ret

000002b6 <__fixunssfsi>:
 2b6:	0e 94 ba 01 	call	0x374	; 0x374 <__fp_splitA>
 2ba:	88 f0       	brcs	.+34     	; 0x2de <__fixunssfsi+0x28>
 2bc:	9f 57       	subi	r25, 0x7F	; 127
 2be:	98 f0       	brcs	.+38     	; 0x2e6 <__fixunssfsi+0x30>
 2c0:	b9 2f       	mov	r27, r25
 2c2:	99 27       	eor	r25, r25
 2c4:	b7 51       	subi	r27, 0x17	; 23
 2c6:	b0 f0       	brcs	.+44     	; 0x2f4 <__fixunssfsi+0x3e>
 2c8:	e1 f0       	breq	.+56     	; 0x302 <__fixunssfsi+0x4c>
 2ca:	66 0f       	add	r22, r22
 2cc:	77 1f       	adc	r23, r23
 2ce:	88 1f       	adc	r24, r24
 2d0:	99 1f       	adc	r25, r25
 2d2:	1a f0       	brmi	.+6      	; 0x2da <__fixunssfsi+0x24>
 2d4:	ba 95       	dec	r27
 2d6:	c9 f7       	brne	.-14     	; 0x2ca <__fixunssfsi+0x14>
 2d8:	14 c0       	rjmp	.+40     	; 0x302 <__fixunssfsi+0x4c>
 2da:	b1 30       	cpi	r27, 0x01	; 1
 2dc:	91 f0       	breq	.+36     	; 0x302 <__fixunssfsi+0x4c>
 2de:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <__fp_zero>
 2e2:	b1 e0       	ldi	r27, 0x01	; 1
 2e4:	08 95       	ret
 2e6:	0c 94 d4 01 	jmp	0x3a8	; 0x3a8 <__fp_zero>
 2ea:	67 2f       	mov	r22, r23
 2ec:	78 2f       	mov	r23, r24
 2ee:	88 27       	eor	r24, r24
 2f0:	b8 5f       	subi	r27, 0xF8	; 248
 2f2:	39 f0       	breq	.+14     	; 0x302 <__fixunssfsi+0x4c>
 2f4:	b9 3f       	cpi	r27, 0xF9	; 249
 2f6:	cc f3       	brlt	.-14     	; 0x2ea <__fixunssfsi+0x34>
 2f8:	86 95       	lsr	r24
 2fa:	77 95       	ror	r23
 2fc:	67 95       	ror	r22
 2fe:	b3 95       	inc	r27
 300:	d9 f7       	brne	.-10     	; 0x2f8 <__fixunssfsi+0x42>
 302:	3e f4       	brtc	.+14     	; 0x312 <__fixunssfsi+0x5c>
 304:	90 95       	com	r25
 306:	80 95       	com	r24
 308:	70 95       	com	r23
 30a:	61 95       	neg	r22
 30c:	7f 4f       	sbci	r23, 0xFF	; 255
 30e:	8f 4f       	sbci	r24, 0xFF	; 255
 310:	9f 4f       	sbci	r25, 0xFF	; 255
 312:	08 95       	ret

00000314 <__fp_inf>:
 314:	97 f9       	bld	r25, 7
 316:	9f 67       	ori	r25, 0x7F	; 127
 318:	80 e8       	ldi	r24, 0x80	; 128
 31a:	70 e0       	ldi	r23, 0x00	; 0
 31c:	60 e0       	ldi	r22, 0x00	; 0
 31e:	08 95       	ret

00000320 <__fp_nan>:
 320:	9f ef       	ldi	r25, 0xFF	; 255
 322:	80 ec       	ldi	r24, 0xC0	; 192
 324:	08 95       	ret

00000326 <__fp_pscA>:
 326:	00 24       	eor	r0, r0
 328:	0a 94       	dec	r0
 32a:	16 16       	cp	r1, r22
 32c:	17 06       	cpc	r1, r23
 32e:	18 06       	cpc	r1, r24
 330:	09 06       	cpc	r0, r25
 332:	08 95       	ret

00000334 <__fp_pscB>:
 334:	00 24       	eor	r0, r0
 336:	0a 94       	dec	r0
 338:	12 16       	cp	r1, r18
 33a:	13 06       	cpc	r1, r19
 33c:	14 06       	cpc	r1, r20
 33e:	05 06       	cpc	r0, r21
 340:	08 95       	ret

00000342 <__fp_round>:
 342:	09 2e       	mov	r0, r25
 344:	03 94       	inc	r0
 346:	00 0c       	add	r0, r0
 348:	11 f4       	brne	.+4      	; 0x34e <__fp_round+0xc>
 34a:	88 23       	and	r24, r24
 34c:	52 f0       	brmi	.+20     	; 0x362 <__fp_round+0x20>
 34e:	bb 0f       	add	r27, r27
 350:	40 f4       	brcc	.+16     	; 0x362 <__fp_round+0x20>
 352:	bf 2b       	or	r27, r31
 354:	11 f4       	brne	.+4      	; 0x35a <__fp_round+0x18>
 356:	60 ff       	sbrs	r22, 0
 358:	04 c0       	rjmp	.+8      	; 0x362 <__fp_round+0x20>
 35a:	6f 5f       	subi	r22, 0xFF	; 255
 35c:	7f 4f       	sbci	r23, 0xFF	; 255
 35e:	8f 4f       	sbci	r24, 0xFF	; 255
 360:	9f 4f       	sbci	r25, 0xFF	; 255
 362:	08 95       	ret

00000364 <__fp_split3>:
 364:	57 fd       	sbrc	r21, 7
 366:	90 58       	subi	r25, 0x80	; 128
 368:	44 0f       	add	r20, r20
 36a:	55 1f       	adc	r21, r21
 36c:	59 f0       	breq	.+22     	; 0x384 <__fp_splitA+0x10>
 36e:	5f 3f       	cpi	r21, 0xFF	; 255
 370:	71 f0       	breq	.+28     	; 0x38e <__fp_splitA+0x1a>
 372:	47 95       	ror	r20

00000374 <__fp_splitA>:
 374:	88 0f       	add	r24, r24
 376:	97 fb       	bst	r25, 7
 378:	99 1f       	adc	r25, r25
 37a:	61 f0       	breq	.+24     	; 0x394 <__fp_splitA+0x20>
 37c:	9f 3f       	cpi	r25, 0xFF	; 255
 37e:	79 f0       	breq	.+30     	; 0x39e <__fp_splitA+0x2a>
 380:	87 95       	ror	r24
 382:	08 95       	ret
 384:	12 16       	cp	r1, r18
 386:	13 06       	cpc	r1, r19
 388:	14 06       	cpc	r1, r20
 38a:	55 1f       	adc	r21, r21
 38c:	f2 cf       	rjmp	.-28     	; 0x372 <__fp_split3+0xe>
 38e:	46 95       	lsr	r20
 390:	f1 df       	rcall	.-30     	; 0x374 <__fp_splitA>
 392:	08 c0       	rjmp	.+16     	; 0x3a4 <__fp_splitA+0x30>
 394:	16 16       	cp	r1, r22
 396:	17 06       	cpc	r1, r23
 398:	18 06       	cpc	r1, r24
 39a:	99 1f       	adc	r25, r25
 39c:	f1 cf       	rjmp	.-30     	; 0x380 <__fp_splitA+0xc>
 39e:	86 95       	lsr	r24
 3a0:	71 05       	cpc	r23, r1
 3a2:	61 05       	cpc	r22, r1
 3a4:	08 94       	sec
 3a6:	08 95       	ret

000003a8 <__fp_zero>:
 3a8:	e8 94       	clt

000003aa <__fp_szero>:
 3aa:	bb 27       	eor	r27, r27
 3ac:	66 27       	eor	r22, r22
 3ae:	77 27       	eor	r23, r23
 3b0:	cb 01       	movw	r24, r22
 3b2:	97 f9       	bld	r25, 7
 3b4:	08 95       	ret

000003b6 <__mulsf3>:
 3b6:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__mulsf3x>
 3ba:	0c 94 a1 01 	jmp	0x342	; 0x342 <__fp_round>
 3be:	0e 94 93 01 	call	0x326	; 0x326 <__fp_pscA>
 3c2:	38 f0       	brcs	.+14     	; 0x3d2 <__mulsf3+0x1c>
 3c4:	0e 94 9a 01 	call	0x334	; 0x334 <__fp_pscB>
 3c8:	20 f0       	brcs	.+8      	; 0x3d2 <__mulsf3+0x1c>
 3ca:	95 23       	and	r25, r21
 3cc:	11 f0       	breq	.+4      	; 0x3d2 <__mulsf3+0x1c>
 3ce:	0c 94 8a 01 	jmp	0x314	; 0x314 <__fp_inf>
 3d2:	0c 94 90 01 	jmp	0x320	; 0x320 <__fp_nan>
 3d6:	11 24       	eor	r1, r1
 3d8:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <__fp_szero>

000003dc <__mulsf3x>:
 3dc:	0e 94 b2 01 	call	0x364	; 0x364 <__fp_split3>
 3e0:	70 f3       	brcs	.-36     	; 0x3be <__mulsf3+0x8>

000003e2 <__mulsf3_pse>:
 3e2:	95 9f       	mul	r25, r21
 3e4:	c1 f3       	breq	.-16     	; 0x3d6 <__mulsf3+0x20>
 3e6:	95 0f       	add	r25, r21
 3e8:	50 e0       	ldi	r21, 0x00	; 0
 3ea:	55 1f       	adc	r21, r21
 3ec:	62 9f       	mul	r22, r18
 3ee:	f0 01       	movw	r30, r0
 3f0:	72 9f       	mul	r23, r18
 3f2:	bb 27       	eor	r27, r27
 3f4:	f0 0d       	add	r31, r0
 3f6:	b1 1d       	adc	r27, r1
 3f8:	63 9f       	mul	r22, r19
 3fa:	aa 27       	eor	r26, r26
 3fc:	f0 0d       	add	r31, r0
 3fe:	b1 1d       	adc	r27, r1
 400:	aa 1f       	adc	r26, r26
 402:	64 9f       	mul	r22, r20
 404:	66 27       	eor	r22, r22
 406:	b0 0d       	add	r27, r0
 408:	a1 1d       	adc	r26, r1
 40a:	66 1f       	adc	r22, r22
 40c:	82 9f       	mul	r24, r18
 40e:	22 27       	eor	r18, r18
 410:	b0 0d       	add	r27, r0
 412:	a1 1d       	adc	r26, r1
 414:	62 1f       	adc	r22, r18
 416:	73 9f       	mul	r23, r19
 418:	b0 0d       	add	r27, r0
 41a:	a1 1d       	adc	r26, r1
 41c:	62 1f       	adc	r22, r18
 41e:	83 9f       	mul	r24, r19
 420:	a0 0d       	add	r26, r0
 422:	61 1d       	adc	r22, r1
 424:	22 1f       	adc	r18, r18
 426:	74 9f       	mul	r23, r20
 428:	33 27       	eor	r19, r19
 42a:	a0 0d       	add	r26, r0
 42c:	61 1d       	adc	r22, r1
 42e:	23 1f       	adc	r18, r19
 430:	84 9f       	mul	r24, r20
 432:	60 0d       	add	r22, r0
 434:	21 1d       	adc	r18, r1
 436:	82 2f       	mov	r24, r18
 438:	76 2f       	mov	r23, r22
 43a:	6a 2f       	mov	r22, r26
 43c:	11 24       	eor	r1, r1
 43e:	9f 57       	subi	r25, 0x7F	; 127
 440:	50 40       	sbci	r21, 0x00	; 0
 442:	9a f0       	brmi	.+38     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 444:	f1 f0       	breq	.+60     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 446:	88 23       	and	r24, r24
 448:	4a f0       	brmi	.+18     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 44a:	ee 0f       	add	r30, r30
 44c:	ff 1f       	adc	r31, r31
 44e:	bb 1f       	adc	r27, r27
 450:	66 1f       	adc	r22, r22
 452:	77 1f       	adc	r23, r23
 454:	88 1f       	adc	r24, r24
 456:	91 50       	subi	r25, 0x01	; 1
 458:	50 40       	sbci	r21, 0x00	; 0
 45a:	a9 f7       	brne	.-22     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 45c:	9e 3f       	cpi	r25, 0xFE	; 254
 45e:	51 05       	cpc	r21, r1
 460:	80 f0       	brcs	.+32     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 462:	0c 94 8a 01 	jmp	0x314	; 0x314 <__fp_inf>
 466:	0c 94 d5 01 	jmp	0x3aa	; 0x3aa <__fp_szero>
 46a:	5f 3f       	cpi	r21, 0xFF	; 255
 46c:	e4 f3       	brlt	.-8      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 46e:	98 3e       	cpi	r25, 0xE8	; 232
 470:	d4 f3       	brlt	.-12     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 472:	86 95       	lsr	r24
 474:	77 95       	ror	r23
 476:	67 95       	ror	r22
 478:	b7 95       	ror	r27
 47a:	f7 95       	ror	r31
 47c:	e7 95       	ror	r30
 47e:	9f 5f       	subi	r25, 0xFF	; 255
 480:	c1 f7       	brne	.-16     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 482:	fe 2b       	or	r31, r30
 484:	88 0f       	add	r24, r24
 486:	91 1d       	adc	r25, r1
 488:	96 95       	lsr	r25
 48a:	87 95       	ror	r24
 48c:	97 f9       	bld	r25, 7
 48e:	08 95       	ret

00000490 <_exit>:
 490:	f8 94       	cli

00000492 <__stop_program>:
 492:	ff cf       	rjmp	.-2      	; 0x492 <__stop_program>
